{"version":3,"sources":["layouts/Layout.jsx","routes/Privacy.jsx","routes/Terms.jsx","utils/SpotifyAuth.js","routes/AuthRedirect.jsx","routes/ConnectToSession.jsx","utils/SessionManager.js","routes/Create.jsx","routes/Home.jsx","components/Player.jsx","components/HostPlayer.jsx","components/ListenerPlayer.jsx","routes/Room.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Layout","props","style","height","width","display","justifyContent","alignItems","background","color","padding","borderRadius","boxShadow","maxWidth","maxHeight","overflow","children","position","bottom","left","transform","href","to","Privacy","id","Terms","CLIENT_ID","require","config","redirectURL","window","location","origin","getToken","code","a","key","postData","client_id","grant_type","redirect_uri","code_verifier","sessionStorage","getItem","form","URLSearchParams","append","axios","post","res","setItem","data","refresh_token","Date","now","expires_in","access_token","token","goAuth","redirectTo","getVerifierAndChallenge","hash","encodeURIComponent","getPlayer","title","Spotify","Player","volume","name","getOAuthToken","callback","rToken","expire","refreshToken","then","catch","e","error_description","removeItem","pathname","console","log","setState","loggedIn","len","validChars","array","Uint8Array","crypto","getRandomValues","map","x","charCodeAt","length","randomState","String","fromCharCode","apply","pkce_challenge_from_verifier","hashedState","sha256","plain","TextEncoder","encode","createHash","update","digest","base64urlencode","btoa","replace","v","hashed","base64encoded","crypto2","AuthRedirect","urlParams","search","has","auth","get","history","React","Component","CodeInput","styled","input","ConnectToSession","useState","setCode","useHistory","marginTop","onSubmit","push","type","placeholder","onChange","target","value","margin","firebaseConfig","apiKey","process","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","appId","REACT_APP_FIREBASE_APP_ID","firebase","FBAuth","session_token","signInAnonymously","user","localStorage","getIdToken","Authorization","headers","expiresIn","error","createSession","i","Promise","resolve","reject","undefined","session","Error","setTimeout","publishUpdate","uri","playing","retries","timestamp","response","status","Create","state","activeSession","create","bind","this","Boolean","textAlign","onClick","Home","fontSize","letterSpacing","fontWeight","src","coverArtURL","alt","album","paddingBottom","artists","item","join","secondsToTimeFormat","min","max","duration","readOnly","icon","faVolumeMute","changeVolume","step","faVolumeUp","dontShow","cursor","togglePlay","faPause","faPlay","hrs","mins","secs","ret","HostPlayer","connected","device_id","hostConnected","loading","connections","viewPlayer","psoCounter","setTokenRefreshInterval","refreshInterval","setInterval","SessionManager","connect","player","addListener","connectToPlayer","on","message","initializePlayer","spotifyReady","alert","playbackStateObj","put","device_ids","play","setVolume","onbeforeunload","onSpotifyWebPlaybackSDKReady","_prevProps","pPSO","ppsoC","track_window","current_track","paused","clearInterval","tickInterval","disconnect","images","url","backgroundColor","ListenerPlayer","playReq","subConnected","spotConnected","pos_ms","uris","position_ms","setListenerListeners","REACT_APP_SUB","eventListener","EventSource","sessionId","onopen","onmessage","event","JSON","parse","prevState","calcPos","onerror","pso","resume","tick","pause","getCurrentState","Math","abs","seek","close","flexWrap","Room","isHost","expired","match","params","App","path","exact","component","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4gBAGaA,G,OAAS,SAACC,GACrB,OACE,yBACEC,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,yBACEL,MAAO,CACLM,WAAY,QACZC,MAAO,UACPC,QAAS,OACTC,aAAc,SACdC,UAAW,+BACXC,SAAU,MACVC,UAAW,MACXC,SAAU,SAGXd,EAAMe,UAET,uBACEd,MAAO,CACLe,SAAU,WACVC,OAAQ,IACRC,KAAM,MACNC,UAAW,mBACXX,MAAO,UANX,OASI,IACF,uBAAGY,KAAK,0BAA0BnB,MAAO,CAAEO,MAAO,UAAlD,UAEK,IAZP,SAaS,IACP,kBAAC,IAAD,CAAMa,GAAG,OAAOpB,MAAO,CAAEO,MAAO,UAAhC,oBAEQ,IAhBV,IAiBI,IACF,kBAAC,IAAD,CAAMa,GAAG,WAAWpB,MAAO,CAAEO,MAAO,UAApC,sBC3CKc,EAAU,WACrB,OACE,kBAAC,EAAD,KACE,6BACE,wBAAIC,GAAG,kBAAP,kBACA,iYAQA,uBAAGA,GAAG,aAAN,8EAIA,wBAAIA,GAAG,sBAAP,uBACA,4gBASE,6BACE,uBAAGH,KAAK,cAAR,MAVJ,KAcA,wBAAIG,GAAG,oBAAP,qBACA,6KAIE,6BACE,uBAAGH,KAAK,cAAR,MALJ,2IAWA,wBAAIG,GAAG,gCAAP,iCACA,4CACgB,uCADhB,uDAEsB,uCAFtB,8FAGkE,IAChE,0CAJF,2CAMA,wBAAIA,GAAG,sBAAP,uBACA,mRAMA,2KC1DKC,EAAQ,WACnB,OACE,kBAAC,EAAD,KACE,6BACE,wBAAID,GAAG,wBAAP,wBACA,+PAIoB,uCAJpB,wDAKwB,uCALxB,sDAQA,uDAC2B,uCAD3B,2GAKA,wCACY,uCADZ,4LAMA,wCACY,uCADZ,uNAMA,sSAMA,uKAIA,uCACA,+JAGA,yQAGA,2BACE,uBAAGH,KAAK,qBAAR,cADF,uFAGA,sEAC0C,uBAAGA,KAAK,qBAAR,cAD1C,+F,gGCnDKK,EAAY,mCAEzBC,EAAQ,KAAUC,SAElB,IAAIC,EAAcC,OAAOC,SAASC,OAAS,QACpC,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,qBAAAC,EAAA,sDASL,IAASC,KARLC,EAAW,CACbC,UAAWZ,EACXa,WAAY,qBACZL,KAAMA,EACNM,aAAcX,EACdY,cAAeX,OAAOY,eAAeC,QAAQ,YAE3CC,EAAO,IAAIC,gBACCR,EACdO,EAAKE,OAAOV,EAAKC,EAASD,IAVvB,gBAaWW,IAAMC,KAAK,yCAA0CJ,GAbhE,cAaDK,EAbC,OAcLnB,OAAOY,eAAeQ,QAAQ,gBAAiBD,EAAIE,KAAKC,eACxDtB,OAAOY,eAAeQ,QACpB,aACAG,KAAKC,MAA8B,IAAtBL,EAAIE,KAAKI,YAExBzB,OAAOY,eAAeQ,QAAQ,eAAgBD,EAAIE,KAAKK,cAnBlD,kBAoBEP,EAAIE,MApBN,6C,kEAuBA,WAA4BM,GAA5B,qBAAAtB,EAAA,sDAOL,IAASC,KANLC,EAAW,CACbC,UAAWZ,EACXa,WAAY,gBACZa,cAAeK,GAEbb,EAAO,IAAIC,gBACCR,EACdO,EAAKE,OAAOV,EAAKC,EAASD,IARvB,gBAWWW,IAAMC,KAAK,yCAA0CJ,GAXhE,cAWDK,EAXC,OAYLnB,OAAOY,eAAeQ,QAAQ,gBAAiBD,EAAIE,KAAKC,eACxDtB,OAAOY,eAAeQ,QACpB,aACAG,KAAKC,MAA8B,IAAtBL,EAAIE,KAAKI,YAExBzB,OAAOY,eAAeQ,QAAQ,eAAgBD,EAAIE,KAAKK,cAjBlD,kBAkBEP,EAAIE,MAlBN,6C,sBAqBA,SAAeO,EAAtB,kC,4CAAO,WAAsBC,GAAtB,eAAAxB,EAAA,6DACLL,OAAOY,eAAeQ,QAAQ,aAAcS,GADvC,SAEYC,EAAwB,KAFpC,OAEDC,EAFC,OAIL/B,OAAOY,eAAeQ,QAAQ,UAAWW,EAAK,IAC9C/B,OAAOY,eAAeQ,QAAQ,aAAcW,EAAK,IAEjD/B,OAAOC,SAASV,KAAhB,2DAA2EK,EAA3E,4CAAwHoC,mBACtHjC,GADF,yIAGEgC,EAAK,IAVF,4C,sBAcA,SAASE,EAAUC,GAAQ,IAAD,OAC/B,OAAO,IAAIlC,OAAOmC,QAAQC,OAAO,CAC/BC,OAAQ,GACRC,KAAMJ,EACNK,cAAe,SAACC,GACd,IAAIb,EAAQ3B,OAAOY,eAAeC,QAAQ,gBACtC4B,EAASzC,OAAOY,eAAeC,QAAQ,iBACvC6B,EAAS1C,OAAOY,eAAeC,QAAQ,cAC3C,GAAIU,KAAKC,MAAQkB,GAAUD,EACzB,OA5CD,SAAP,kCA4CeE,CAAahB,GACjBiB,MAAK,SAACvB,GACLmB,EAASnB,EAAKK,iBAEfmB,OAAM,SAACC,IACDA,EAAEC,kBAAoB,2BACzB/C,OAAOY,eAAeoC,WAAW,iBACjChD,OAAOY,eAAeoC,WAAW,gBACjCpB,EAAO5B,OAAOC,SAASgD,cAK/B,GAAItB,EACF,OAAOa,EAASb,GAElB,IAAIvB,EAAOJ,OAAOY,eAAeC,QAAQ,QACrCT,EACFD,EAASC,GAAMwC,MAAK,SAACvB,GACnBrB,OAAOY,eAAeoC,WAAW,QACjCE,QAAQC,IAAI9B,GACZ,EAAK+B,SAAS,CACZC,UAAU,IAEZb,EAASnB,EAAKK,iBAGhBE,EAAO5B,OAAOC,SAASgD,aAMxB,SAAenB,EAAtB,kC,4CAAO,WAAuCwB,GAAvC,qBAAAjD,EAAA,6DACCkD,EACJ,iEACEC,EAAQ,IAAIC,WAAWH,GAC3BtD,OAAO0D,OAAOC,gBAAgBH,GAC9BA,EAAQA,EAAMI,KAAI,SAACC,GAAD,OAAON,EAAWO,WAAWD,EAAIN,EAAWQ,WACxDC,EAAcC,OAAOC,aAAaC,MAAM,KAAMX,GAN/C,SAOqBY,EAA6BJ,GAPlD,cAOCK,EAPD,yBASE,CAACL,EAAaK,IAThB,4C,sBAaP,SAASC,EAAOC,GAEd,IACMlD,GADU,IAAImD,aACCC,OAAOF,GAC5B,OAAOb,IAAOgB,WAAW,UAAUC,OAAOtD,GAAMuD,SAGlD,SAASC,EAAgBxE,GAKvB,OAAOyE,KAAKb,OAAOC,aAAaC,MAAM,KAAM,IAAIV,WAAWpD,KACxD0E,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,MAAO,I,SAGLX,E,8EAAf,WAA4CY,GAA5C,iBAAA3E,EAAA,sEACqBiE,EAAOU,GAD5B,cACMC,EADN,OAEMC,EAAgBL,EAAgBI,GAFtC,kBAGSC,GAHT,4C,sBAnBAlF,OAAOmF,QAAUzB,ICrHV,IAAM0B,EAAb,kLACuB,IAAD,OACZC,EAAY,IAAItE,gBAAgBf,OAAOC,SAASqF,QAClDD,EAAUE,IAAI,SAChBC,EAAcH,EAAUI,IAAI,SAAS7C,MAAK,WACxC,EAAKzE,MAAMuH,QAAQX,QAAQ/E,OAAOY,eAAeC,QAAQ,oBALjE,+BAUI,OAAO,kCAVX,GAAkC8E,IAAMC,W,oYCGxC,IAAMC,E,OAAYC,EAAOC,MAAV,KAgBFC,EAAmB,WAAO,IAAD,EACZL,IAAMM,SAAS,IADH,mBAC7B7F,EAD6B,KACvB8F,EADuB,KAE9BR,EAAUS,cAMhB,OACE,kBAAC,EAAD,KACE,wBAAI/H,MAAO,CAAEgI,UAAW,IAAxB,sBACA,0BAAMC,SAPK,WACbX,EAAQY,KAAK,YAAclG,IAMDhC,MAAO,CAAEG,QAAS,WACxC,6BACE,kBAACsH,EAAD,CACEU,KAAK,OACLC,YAAY,OACZC,SAAU,SAAC3D,GAAD,OAAOoD,EAAQpD,EAAE4D,OAAOC,QAClCvI,MAAO,MAGX,6BACE,4BACEmI,KAAK,SACLnI,MAAO,CACLE,MAAO,OACPsI,OAAQ,OACRR,UAAW,SALf,U,gBCrCNS,G,OAAiB,CACnBC,OAAQC,mHAAYC,2BACpBC,WAAYF,mHAAYG,+BACxBC,UAAWJ,mHAAYK,8BACvBC,MAAON,mHAAYO,4BAGrBC,gBAAuBV,GACvB,IAAMW,EAASD,SAEF5E,EAAY,uCAAG,WAAO8E,GAAP,iBAAApH,EAAA,+EAEPmH,EAAOE,oBAFA,cAEpBC,EAFoB,YAGR1G,IAHQ,KAOCjB,OAAO4H,aAAa/G,QAAQ,gBAP7B,SAQgB8G,EAAKA,KAAKE,aAR1B,+BAQH,UARG,WAOlB,kBAPkB,KAQlBC,cARkB,YAMpBC,QANoB,qBAGFtC,IAHE,UAItB,sEAJsB,qBAGpBtE,EAHoB,OAaxBnB,OAAO4H,aAAaxG,QAAQ,eAAgBD,EAAIE,KAAKM,OACrD3B,OAAO4H,aAAaxG,QAClB,mBACqB,IAArBD,EAAIE,KAAK2G,UAAmBzG,KAAKC,OAhBX,kBAkBjBL,EAAIE,MAlBa,kCAoBxB6B,QAAQ+E,MAAR,MApBwB,0DAAH,sDA6BZC,EAAa,uCAAG,wCAAA7H,EAAA,6DAAO8H,EAAP,+BAAW,EAAX,kBACpB,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,mBAAAjI,EAAA,+EAEImH,EAAOE,oBAFX,cAETC,EAFS,YAGM1G,IAHN,UAKbsH,EALa,SAQyBZ,EAAKA,KAAKE,aARnC,+BAQM,UARN,WAQTC,cARS,YAOXC,QAPW,qBAGY7G,KAHZ,UAIb,sEAJa,4BAGTG,EAHS,EAGTA,KAUNrB,OAAO4H,aAAaxG,QAAQ,eAAgBC,EAAKM,OACjD3B,OAAO4H,aAAaxG,QAClB,mBACiB,IAAjBC,EAAK2G,UAAmBzG,KAAKC,OAE/BxB,OAAO4H,aAAaxG,QAAQ,iBAAkBC,EAAKmH,SACnDH,EAAQhH,GAnBO,qDAsBL,KAAN8G,EAtBW,0CAuBNG,EAAO,IAAIG,MAAM,yBAvBX,QAyBfC,YAAW,WACTL,EAAQH,EAAcC,EAAI,MADlB,SAENA,EAAI,GAAO,IA3BA,0DAAZ,0DADoB,2CAAH,qDAiCbQ,EAAa,uCAAG,WAAOC,EAAKzJ,EAAU0J,GAAtB,6BAAAxI,EAAA,6DAA+ByI,EAA/B,+BAAyC,EAAzC,kBAERtB,EAAOE,oBAFC,cAErBC,EAFqB,YAGnB1G,IAHmB,KAKvB,CACE2H,MACAzJ,WACA0J,UACAE,UAAWxH,KAAKC,OATK,KAaAxB,OAAO4H,aAAa/G,QAAQ,gBAb5B,UAce8G,EAAKA,KAAKE,aAdzB,gCAcJ,UAdI,WAanB,kBAbmB,KAcnBC,cAdmB,KAenB,eAAgB,oBAfG,MAYrBC,QAZqB,qBAGb7G,KAHa,UAIvB,oEAJuB,wEAoBrB,KAAE8H,WACsB,MAAtB,KAAEA,SAASC,OAEb/F,QAAQ+E,MAAM,kBACL,KAAEe,SAASC,UAGpBH,EAAU,GA3BW,iBA4BvBJ,YAAW,kBAAMC,EAAcC,EAAKzJ,EAAU0J,EAASC,EAAU,KAAI,KA5B9C,6FAAH,0DCxEbI,EAAb,kDACE,WAAY/K,GAAQ,IAAD,8BACjB,cAAMA,IACDgL,MAAQ,CACXC,cAAe,IAEjB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBALG,EADrB,qLAUoBpB,IAVpB,OAUQ/G,EAVR,OAWIoI,KAAKpL,MAAMuH,QAAQY,KAAK,YAAcnF,EAAIqH,SAX9C,gJAeQxI,OAAO4H,aAAa/G,QAAQ,oBAAsBU,KAAKC,OACzD+H,KAAKnG,SAAS,CACZgG,cAAepJ,OAAO4H,aAAa/G,QAAQ,sBAjBnD,+BAuBI,OACE,kBAAC,EAAD,KACG2I,QAAQD,KAAKJ,MAAMC,gBAClB,yBAAKhL,MAAO,CAAEqL,UAAW,SAAU7C,OAAQ,IAA3C,uBAEE,6BACE,kBAAC,IAAD,CACEpH,GAAE,mBAAc+J,KAAKJ,MAAMC,eAC3BhL,MAAO,CAAEO,MAAO,UAEf4K,KAAKJ,MAAMC,iBAKpB,4BAAQM,QAASH,KAAKF,QAAtB,qCAtCR,GAA4B1D,IAAMC,WCDrB+D,EAAb,uKAEI,OACE,kBAAC,EAAD,KACE,wBACEvL,MAAO,CACLqL,UAAW,SACXG,SAAU,MACVC,cAAe,MACfjD,OAAQ,EACRkD,WAAY,SANhB,UAWA,yBACE1L,MAAO,CACLG,QAAS,OACTC,eAAgB,eAChB4H,UAAW,KAGb,kBAAC,IAAD,CAAM5G,GAAG,YACP,4BAAQpB,MAAO,CAAEwL,SAAU,KACzB,mCADF,eAIF,kBAAC,IAAD,CAAMpK,GAAG,WACP,4BAAQpB,MAAO,CAAEwL,SAAU,KACzB,oCADF,qBA5BZ,GAA0BjE,IAAMC,W,gBCInBxD,GAAS,SAACjE,GACrB,OACE,yBACEC,MAAO,CACLE,MAAO,IACPmL,UAAW,SACX5K,aAAc,GACdD,QAAS,KAGX,yBACER,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPW,SAAU,WAGZ,yBAAK8K,IAAK5L,EAAM6L,YAAaC,IAAG,wBAAmB9L,EAAM+L,UAE3D,yBAAK9L,MAAO,CAAE+L,cAAe,KAC3B,4BAAKhM,EAAM+D,OACV/D,EAAMiM,QAAQxG,KAAI,SAACyG,GAAD,OAAUA,EAAK/H,QAAMgI,KAAK,MAF/C,IAEsD,6BACnDnM,EAAM+L,OAET,6BACGK,GAAoBpM,EAAMgB,UAC3B,2BACEf,MAAO,CAAEE,MAAO,OAChBiI,KAAK,QACLjE,KAAK,WACL5C,GAAG,WACHiH,MAAOxI,EAAMgB,SACbqL,IAAK,EACLC,IAAKtM,EAAMuM,SACXC,UAAQ,IAETJ,GAAoBpM,EAAMuM,WAE7B,6BACE,kBAAC,IAAD,CAAKE,KAAMC,MACX,2BACEtE,KAAK,QACLjE,KAAK,SACL5C,GAAG,SACHiH,MAAOxI,EAAMkE,OACboE,SAAUtI,EAAM2M,aAChBN,IAAK,EACLC,IAAK,EACLM,KAAM,MAER,kBAAC,IAAD,CAAKH,KAAMI,QAEX7M,EAAM8M,UACN,yBAAK7M,MAAO,CAAE8M,OAAQ,WAAaxB,QAAS,kBAAMvL,EAAMgN,eACrDhN,EAAM0K,QAAU,kBAAC,IAAD,CAAK+B,KAAMQ,MAAc,kBAAC,IAAD,CAAKR,KAAMS,SAM/D,SAASd,GAAoBG,GAE3B,IAAIY,KAASZ,EAAW,MACpBa,KAAWb,EAAW,KAAQ,IAC9Bc,IAASd,EAAW,GAGpBe,EAAM,GAQV,OANIH,EAAM,IACRG,GAAYH,EAAM,KAAOC,EAAO,GAAK,IAAM,KAG7CE,GAAYF,EAAO,KAAOC,EAAO,GAAK,IAAM,IAC5CC,GAAO,GAAKD,E,IC3EOE,G,4MACnBvC,MAAQ,CACNhK,SAAU,EACVuL,SAAU,EACViB,WAAW,EACX/C,IAAK,GACLC,SAAS,EACTmB,YAAa,GACb9H,MAAO,GACPkI,QAAS,GACTF,MAAO,GACP0B,UAAW,GACXvJ,OAAQ,GACRwJ,eAAe,EACfC,SAAS,EACTC,YAAa,EACbC,YAAY,EACZC,WAAY,EACZxE,cAAe,I,EAGjByE,wBAA0B,WAExB,EAAKC,gBAAkBC,YACrBC,EACA,KACA,CAACrM,OAAO4H,aAAa/G,QAAQ,mB,EAQjCyL,QAAU,WACR,EAAKC,OAAOC,YAAY,SAAS,SAAC1J,GAChCI,QAAQC,IAAIL,GACZ,EAAK2J,gBAAgB3J,EAAE8I,WACvB,EAAKM,0BACLhJ,QAAQC,IAAInD,OAAOY,eAAeC,QAAQ,eAE1C,EAAKuC,SAAS,CACZwI,UAAW9I,EAAE8I,UACbvI,UAAU,OAGd,EAAKkJ,OAAOC,YAAY,YAAatJ,QAAQC,KAC7C,EAAKoJ,OAAOG,GAAG,wBAAwB,YAAkB,IAAfC,EAAc,EAAdA,QACxCzJ,QAAQ+E,MAAM,uBAAwB0E,MAExC,EAAKJ,OAAOG,GAAG,wBAAwB,YAAkB,IAAfC,EAAc,EAAdA,QACxCzJ,QAAQ+E,MAAM,yBAA0B0E,MAE1C,EAAKJ,OAAOG,GAAG,iBAAiB,YAAkB,IAAfC,EAAc,EAAdA,QACjCzJ,QAAQ+E,MAAM,qCAAsC0E,MAEtD,EAAKJ,OAAOG,GAAG,kBAAkB,YAAkB,IAAfC,EAAc,EAAdA,QAClCzJ,QAAQ+E,MAAM,6BAA8B0E,MAE9C,EAAKJ,OAAOD,W,EAGdM,iBAAmB,WACjB5M,OAAO6M,cAAe,EACtB,EAAKN,OAAS/G,EAAe,eAC7B,EAAK+G,OAAOG,GAAG,wBAAwB,SAACrL,GACtC6B,QAAQC,IAAI9B,GACR,EAAK8H,MAAM8C,aAAe5K,IAE5B,EAAKsH,cAAc,GAAI,EAAKQ,MAAMhK,UAAU,GAG5C2N,MACE,mFAGAzL,IACF6B,QAAQC,IAAI,UAAW9B,GACvB,EAAK+B,SAAS,CACZ2J,iBAAkB1L,EAClBlC,SAAUkC,EAAKlC,SACf8M,WAAY,EAAK9C,MAAM8C,WAAa,QAI1C,EAAK7I,SAAS,CAAE0I,SAAS,K,EAG3BW,gBAAkB,SAACb,GACjB,OAAO3K,IACJ+L,IADI,uCAGH,CACEC,WAAY,CAACrB,GAAa,EAAKzC,MAAMyC,WACrCsB,MAAM,GAER,CACEnF,QAAS,CACP,eAAgB,mBAChBD,cAAc,UAAD,OAAY9H,OAAOY,eAAeC,QAC7C,oBAKP+B,MAAK,WACJ,EAAKQ,SAAS,CACZuI,WAAW,Q,EAKnBb,aAAe,SAAChI,GACd,EAAKyJ,OAAOY,UAAUrK,EAAE4D,OAAOC,OAC/B,EAAKvD,SAAS,CACZf,OAAQS,EAAE4D,OAAOC,S,qGArFDiC,EAAKzJ,EAAU0J,G,iEACjCwD,EAA6BzD,EAAKzJ,EAAU0J,G,gJAwFzB,IAAD,OAClB7I,OAAOoN,eAAiB,WACtB,EAAKzE,cAAc,GAAI,EAAKQ,MAAMhK,UAAU,IAG9CoK,KAAKnG,SAAS,CACZqE,cAAezH,OAAO4H,aAAa/G,QAAQ,kBAGzCb,OAAO6M,aACTtD,KAAKqD,mBAEL5M,OAAOqN,6BAA+B9D,KAAKqD,mB,yCAK7CU,E,GAEC,IAAD,OADoBC,EACpB,EADER,iBAAoCS,EACtC,EAD0BvB,WAE1B,GAAKsB,GAIDC,IAAUjE,KAAKJ,MAAM8C,WAAY,CAAC,IAAD,EAO/B1C,KAAKJ,MAAM4D,iBAJMnE,EAHc,EAEjC6E,aACEC,cAAiB9E,IAEnBzJ,EALiC,EAKjCA,SACAwO,EANiC,EAMjCA,OAEFpE,KAAKZ,cAAcC,EAAKzJ,GAAWwO,GAE/BJ,EAAKI,SAAWA,IACdA,EACFC,cAAcrE,KAAKsE,cAEnBtE,KAAKsE,aAAezB,aAAY,WAC9B,EAAKhJ,SAAS,CACZjE,SAAU,EAAKgK,MAAMhK,SAAW,QAEjC,S,6CAOToK,KAAKZ,cAAc,GAAIY,KAAKJ,MAAMhK,UAAU,GAC5Ca,OAAOoN,eAAiB,KACxB7D,KAAKgD,OAAOuB,aACZF,cAAcrE,KAAK4C,mB,+BAGX,IAAD,OACP,GAAI5K,KAAKC,MAAQxB,OAAOY,eAAeC,QAAQ,cAC7C,OACE,kBAAC,EAAD,KACE,4BAAQ6I,QAASH,KAAK+C,SAAtB,uBAKN,GAAI/C,KAAKJ,MAAM2C,QACb,OACE,kBAAC,EAAD,KACE,yCAKN,IAAKvC,KAAKJ,MAAM4D,iBACd,OACE,kBAAC,EAAD,KACE,4BAAQrD,QAASH,KAAK+C,SAAtB,kBApBC,MAyBoB/C,KAAKJ,MAAM4D,iBAAhCY,EAzBC,EAyBDA,OAAQjD,EAzBP,EAyBOA,SACRrI,EAAWkH,KAAKJ,MAAhB9G,OACFlD,EAAWoK,KAAKJ,MAAMhK,SACtB6K,EAAcT,KAAKJ,MAAM4D,iBAAiBU,aAAaC,cACxDxD,MAAM6D,OAAO,GAAGC,IACf9D,EAAQX,KAAKJ,MAAM4D,iBAAiBU,aAAaC,cAAcxD,MAChE5H,KACC8H,EAAUb,KAAKJ,MAAM4D,iBAAiBU,aAAaC,cACpDtD,QACClI,EAAQqH,KAAKJ,MAAM4D,iBAAiBU,aAAaC,cAAcpL,KAEnE,OACE,oCACE,kBAAC,GAAD,CACEnD,SAAUA,EAAW,IACrBuL,SAAUA,EAAW,IACrBV,YAAaA,EACbE,MAAOA,EACPhI,MAAOA,EACPkI,QAASA,EACTe,WAAY,kBAAM,EAAKoB,OAAOpB,cAC9BtC,SAAU8E,EACVtL,OAAQA,EACRyI,aAAcvB,KAAKuB,eAErB,yBACE1M,MAAO,CACLE,MAAO,IACPmL,UAAW,SACXwE,gBAAiB,UACjBpP,aAAc,GACdD,QAAS,GACTwH,UAAW,KAPf,qCAUoC,6BAVpC,6CAYE,yBAAKhI,MAAO,CAAEwI,OAAQ,KACpB,2BAAOL,KAAK,OAAOoE,UAAQ,EAAChE,MAAO3G,OAAOC,SAASV,QAbvD,qCAeoC,6BAfpC,+EAiBU,6BACPgK,KAAKJ,MAAM4C,YAlBd,0B,GAhOgCpG,IAAMC,WCDzBsI,G,4MACnBC,SAAU,E,EACVhF,MAAQ,CACN0C,eAAe,EACfuC,cAAc,EACdC,eAAe,EACfvC,SAAS,EACT1B,QAAS,GACTjL,SAAU,EACVyJ,IAAK,GACL8B,SAAU,EACVrI,OAAQ,GACRwG,SAAS,EACT3G,MAAO,GACPgI,MAAO,GACP6B,YAAa,G,EAGfmB,KAAO,SAACtE,EAAK0F,GACX,IAAI,EAAKH,QAOT,OAJE,EAAKA,SAAU,EAGjBjL,QAAQC,IAAI,SAAUyF,EAAK0F,GACpBrN,IACJ+L,IADI,8DAEoD,EAAK7D,MAAMyC,WAClE,CACE2C,KAAM,CAAC3F,GACP4F,YAAaF,GAEf,CACEvG,QAAS,CACP,eAAgB,mBAChBD,cAAc,UAAD,OAAY9H,OAAOY,eAAeC,QAC7C,oBAKP+B,MAAK,WACJ8F,YAAW,WACT,EAAKyF,SAAU,IACd,S,EAITM,qBAAuB,WACrBvL,QAAQC,IAAI4D,mHAAY2H,eACxB,EAAKC,cAAgB,IAAIC,YACvB7H,mHAAY2H,cAAgB,QAAU,EAAKvQ,MAAM0Q,UAAY,OAG/D,EAAKF,cAAcG,OAAS,WAC1B,EAAK1L,SAAS,CACZgL,cAAc,KAIlB,EAAKO,cAAcI,UAAY,SAACC,GAC9B9L,QAAQC,IAAI6L,EAAM3N,MADsB,MAEI4N,KAAKC,MAAMF,EAAM3N,MAAvD0H,EAFkC,EAElCA,UAAWH,EAFuB,EAEvBA,IAAKzJ,EAFkB,EAElBA,SAAU0J,EAFQ,EAERA,QAEhC,GADA3F,QAAQC,IAAI6L,EAAM3N,MACd,EAAK8H,MAAMP,MAAQA,EAKrB,OAJA,EAAKxF,SAAS,CACZyF,SAAS,SAEXiE,MAAM,sCAEIlE,EAOZ,EAAKxF,UAAS,SAAC+L,GAEb,GAAIA,EAAUpG,WAAaA,EAAYoG,EAAUpG,UAC/C,MAAO,GAQT,IAAIqG,EAAUvG,EAAU1J,EAAWoC,KAAKC,MAAQuH,EAAY5J,EAC5D,MAAO,CACL4J,YACAH,MACAzJ,SAAUiQ,EACVvG,UACAgD,eAAe,MAvBjB,EAAKzI,SAAS,CACZyI,eAAe,KA2BrB,EAAK8C,cAAcU,QAAUnM,QAAQ+E,MAErC,EAAKsE,OAAOC,YAAY,wBAAwB,SAACnL,GAC/C6B,QAAQC,IAAI,wBACC,OAAT9B,GAEJ,EAAK+B,SAAS,CACZkM,IAAKjO,EACLuH,IAAKvH,EAAKuH,IACVzJ,SAAUkC,EAAKlC,SACfuL,SAAUrJ,EAAKqJ,e,EAwCrB4B,QAAU,WACRpJ,QAAQC,IAAI,QACZ,EAAKoJ,OAAOC,YAAY,SAAS,SAAC1J,GAChCI,QAAQC,IAAIL,GACZ,EAAK2L,uBAEL,EAAKhC,gBAAgB3J,EAAE8I,WAAWhJ,MAAK,WACrCM,QAAQC,IAAI,WACZ,EAAKC,SAAS,CACZwI,UAAW9I,EAAE8I,UACbyC,eAAe,UAIrB,EAAK9B,OAAOG,GAAG,uBAAwBxJ,QAAQC,KAC/C,EAAKoJ,OAAOG,GAAG,wBAAwB,YAAkB,IAAfC,EAAc,EAAdA,QACxCzJ,QAAQ+E,MAAM,uBAAwB0E,MAExC,EAAKJ,OAAOG,GAAG,wBAAwB,YAAkB,IAAfC,EAAc,EAAdA,QACxCzJ,QAAQ+E,MAAM,yBAA0B0E,MAE1C,EAAKJ,OAAOG,GAAG,iBAAiB,YAAkB,IAAfC,EAAc,EAAdA,QACjCzJ,QAAQ+E,MAAM,qCAAsC0E,MAEtD,EAAKJ,OAAOG,GAAG,kBAAkB,YAAkB,IAAfC,EAAc,EAAdA,QAClCzJ,QAAQ+E,MAAM,6BAA8B0E,MAE9C,EAAKJ,OAAOD,UAAU1J,KAAKM,QAAQC,M,EAYrCyJ,iBAAmB,WACjB5M,OAAO6M,cAAe,EACtB,EAAKN,OAAS/G,EAAe,mBAC7B,EAAKpC,SAAS,CAAE0I,SAAS,K,EAW3BW,gBAAkB,SAACb,GACjB,OAAO3K,IAAM+L,IAAN,uCAEL,CACEC,WAAY,CAACrB,GAAa,EAAKzC,MAAMyC,WACrCsB,MAAM,GAER,CACEnF,QAAS,CACP,eAAgB,mBAChBD,cAAc,UAAD,OAAY9H,OAAOY,eAAeC,QAC7C,qB,EAOViK,aAAe,SAAChI,GACd,EAAKyJ,OAAOY,UAAUrK,EAAE4D,OAAOC,OAC/B,EAAKvD,SAAS,CACZf,OAAQS,EAAE4D,OAAOC,S,0GA7GI2G,EAAY6B,G,gFAC/B5F,KAAKJ,MAAM0C,gBAAiBtC,KAAKJ,MAAMmG,I,oBACrC/F,KAAKJ,MAAMN,WAAaU,KAAKJ,MAAMmG,IAAI3B,O,qBACrCpE,KAAKJ,MAAMN,Q,gBACbU,KAAKgD,OAAOgD,SACPhG,KAAKiG,OACRjG,KAAKiG,KAAOpD,aAAY,WACtB,EAAKhJ,SAAS,CACZjE,SAAU,EAAKgK,MAAMhK,SAAW,QAEjC,M,8BAGLyO,cAAcrE,KAAKiG,aACZjG,KAAKiG,KACZjG,KAAKgD,OAAOkD,Q,KACZlG,K,UACaA,KAAKgD,OAAOmD,kB,0BAAvBJ,I,WADGlM,S,wBAKLuM,KAAKC,IAAIrG,KAAKJ,MAAMhK,SAAWgQ,EAAUhQ,UAAY,KACvDoK,KAAKgD,OAAOsD,KAAKtG,KAAKJ,MAAMhK,UAI3BgQ,EAAUvG,MAAQW,KAAKJ,MAAMP,KAC5BW,KAAKJ,MAAMP,MAAQW,KAAKJ,MAAMmG,IAAI1G,MACpCW,KAAKJ,MAAMP,KAEXW,KAAK2D,KAAK3D,KAAKJ,MAAMP,IAAKW,KAAKJ,MAAMhK,U,uJAoCrCoK,KAAKoF,eACPpF,KAAKoF,cAAcmB,QAEjBvG,KAAKgD,QACPhD,KAAKgD,OAAOuB,e,0CAWV9N,OAAO6M,aACTtD,KAAKqD,mBAEL5M,OAAOqN,6BAA+B9D,KAAKqD,mB,+BA6BrC,IAAD,OACP,GAAIrL,KAAKC,MAAQxB,OAAOY,eAAeC,QAAQ,cAC7C,OACE,kBAAC,EAAD,KACE,4BAAQ6I,QAASH,KAAK+C,SAAtB,uBAMN,GAAI/C,KAAKJ,MAAM2C,QACb,OACE,kBAAC,EAAD,KACE,4CAKN,IAAKvC,KAAKJ,MAAMkF,gBAAkB9E,KAAKJ,MAAMiF,aAC3C,OACE,kBAAC,EAAD,KACE,4BAAQ1E,QAASH,KAAK+C,SAAtB,iBAKN,IAAK/C,KAAKJ,MAAM0C,cACd,OACE,kBAAC,EAAD,KACE,mDAA6B,IAC7B,4CAAkBtC,KAAKpL,MAAM0Q,YAKnC,IAAKtF,KAAKJ,MAAMmG,IACd,OACE,kBAAC,EAAD,KACE,mDADF,IAC+B,qDAtC5B,MA0CoB/F,KAAKJ,MAAMmG,IAAhC3B,EA1CC,EA0CDA,OAAQjD,EA1CP,EA0COA,SACVrI,EAASkH,KAAKJ,MAAM9G,OACpBlD,EAAWoK,KAAKJ,MAAMhK,SACtB6K,EAAcT,KAAKJ,MAAMmG,IAAI7B,aAAaC,cAAcxD,MAAM6D,OAAO,GACtEC,IACC9D,EAAQX,KAAKJ,MAAMmG,IAAI7B,aAAaC,cAAcxD,MAAM5H,KACxD8H,EAAUb,KAAKJ,MAAMmG,IAAI7B,aAAaC,cAActD,QACpDlI,EAAQqH,KAAKJ,MAAMmG,IAAI7B,aAAaC,cAAcpL,KAEtD,OACE,kBAAC,EAAD,KACE,yBAAKlE,MAAO,CAAEG,QAAS,OAAQwR,SAAU,SACvC,kBAAC,GAAD,CACE9E,UAAU,EACV9L,SAAUA,EAAW,IACrBuL,SAAUA,EAAW,IACrBV,YAAaA,EACbE,MAAOA,EACPhI,MAAOA,EACPkI,QAASA,EACTe,WAAY,kBAAM,EAAKoB,OAAOpB,cAC9BtC,SAAU8E,EACVtL,OAAQA,EACRyI,aAAcvB,KAAKuB,eAErB,yBACE1M,MAAO,CACLE,MAAO,IACPmL,UAAW,SACX5K,aAAc,GACdD,QAAS,GACTwH,UAAW,KANf,gCASgCmD,KAAKpL,MAAM0Q,UAT3C,KASuD,6BATvD,uCAUsC,6BACpC,uIAE6C,8BAE7C,+LAIM,IACN,mJAIA,6BACCtF,KAAKJ,MAAM4C,YAzBd,2B,GAvSkCpG,IAAMC,WCFrCoK,GAAb,4MACE7G,MAAQ,CACN8G,YAAQ1H,GAFZ,kEAMQvI,OAAO4H,aAAa/G,QAAQ,oBAAsBU,KAAKC,MAEzD+H,KAAKnG,SAAS,CACZ6M,OAAQ,OAGV1G,KAAKnG,SAAS,CACZ6M,OAAQjQ,OAAO4H,aAAa/G,QAAQ,sBAb5C,6CAmBQ0I,KAAKJ,MAAM+G,UACblQ,OAAO4H,aAAa5E,WAAW,oBAC/BhD,OAAO4H,aAAa5E,WAAW,gBAC/BhD,OAAO4H,aAAa5E,WAAW,qBAtBrC,+BA2BI,YAA0BuF,IAAtBgB,KAAKJ,MAAM8G,OAEX,yBACE7R,MAAO,CACLG,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZsR,SAAU,OACV1R,OAAQ,UAGTkL,KAAKJ,MAAM8G,SAAW1G,KAAKpL,MAAMgS,MAAMC,OAAO1Q,GAC7C,kBAAC,GAAD,iBACM6J,KAAKpL,MADX,CAEE0Q,UAAWtF,KAAKpL,MAAMgS,MAAMC,OAAO1Q,MAGrC,kBAAC,GAAD,CAAgBmP,UAAWtF,KAAKpL,MAAMgS,MAAMC,OAAO1Q,MAMvD,kBAAC,EAAD,KACE,+CAnDV,GAA0BiG,IAAMC,W,OC+BjByK,OA3Bf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7G,IACjC,kBAAC,IAAD,CAAO2G,KAAK,UAAUC,OAAK,EAACC,UAAWtH,IACvC,kBAAC,IAAD,CAAOoH,KAAK,QAAQC,OAAK,EAACC,UAAWpL,IACrC,kBAAC,IAAD,CAAOkL,KAAK,eAAeE,UAAWR,KACtC,kBAAC,IAAD,CAAOM,KAAK,WAAWE,UAAWxK,EAAkBuK,OAAK,IACzD,kBAAC,IAAD,CAAOD,KAAK,WAAWE,UAAW/Q,IAClC,kBAAC,IAAD,CAAO6Q,KAAK,OAAOE,UAAW7Q,IAC9B,kBAAC,IAAD,CAAO2Q,KAAK,KACV,kBAAC,EAAD,KACE,yBAAKlS,MAAO,CAAEqL,UAAW,WACvB,wBAAIrL,MAAO,CAAEwI,OAAQ,IACnB,qCAEF,oEACA,kBAAC,IAAD,CAAMpH,GAAG,KAAT,iBCdMgK,QACW,cAA7BxJ,OAAOC,SAASwQ,UAEa,UAA7BzQ,OAAOC,SAASwQ,UAEhBzQ,OAAOC,SAASwQ,SAASN,MACvB,2DCZJO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrO,MAAK,SAAAsO,GACJA,EAAaC,gBAEdtO,OAAM,SAAAoF,GACL/E,QAAQ+E,MAAMA,EAAM0E,c","file":"static/js/main.ecc22bf9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Layout.css\";\nexport const Layout = (props) => {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        style={{\n          background: \"white\",\n          color: \"#2C3A3A\",\n          padding: \"2rem\",\n          borderRadius: \"12.5px\",\n          boxShadow: \"0px 3px 15px rgba(0,0,0,0.2)\",\n          maxWidth: \"90%\",\n          maxHeight: \"80%\",\n          overflow: \"auto\",\n        }}\n      >\n        {props.children}\n      </div>\n      <p\n        style={{\n          position: \"absolute\",\n          bottom: \"0\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          color: \"white\",\n        }}\n      >\n        ©{\" \"}\n        <a href=\"https://www.pogify.net/\" style={{ color: \"white\" }}>\n          Pogify\n        </a>{\" \"}\n        2020 |{\" \"}\n        <Link to=\"/tos\" style={{ color: \"white\" }}>\n          Terms of Service\n        </Link>{\" \"}\n        |{\" \"}\n        <Link to=\"/privacy\" style={{ color: \"white\" }}>\n          Privacy Policy\n        </Link>\n      </p>\n    </div>\n  );\n};\n\n// Layout.propTypes = {\n//   children: PropTypes.element.isRequired\n// };\n","import React from \"react\";\nimport { Layout } from \"../layouts\";\n\nexport const Privacy = () => {\n  return (\n    <Layout>\n      <div>\n        <h1 id=\"privacy-policy\">Privacy Policy</h1>\n        <p>\n          If you require any more information or have any questions about our\n          privacy policy, please feel free to contact us by email at\n          support@pogify.net. At pogify.net, the privacy of our users is\n          extremely important to us. This privacy policy document outlines the\n          types of personal information that are received and collected by\n          pogify.net and how it is used.\n        </p>\n        <p id=\"footnote1\">\n          1: Verified Session - A permanent session granted to an\n          authenticated user\n        </p>\n        <h3 id=\"cookies-and-tokens\">Cookies and Tokens:</h3>\n        <p>\n          Pogify.net does use cookies to store information about visitors\n          sessions, record user-specific information regarding pages the user\n          accesses or visits, customise web page content based on the user's\n          browser type and/or other information that the user sends via his or\n          her browser. Pogify.net stores locally Spotify session tokens and\n          refresh tokens provided when a user uses the Spotify media player.\n          Twitch session tokens and refresh tokens will be stored when a user\n          begins a verified session\n          <sup>\n            <a href=\"#footnote1\">1</a>\n          </sup>\n          .\n        </p>\n        <h3 id=\"user-information\">User information:</h3>\n        <p>\n          Pogify.net stores user information collected from Twitch when a user\n          authenticates using Twitch Authentication when creating a verified\n          session\n          <sup>\n            <a href=\"#footnote1\">1</a>\n          </sup>\n          . The data collected will include the users channel name. This\n          infomation will only be stored aslong as the verified session is\n          running\n        </p>\n        <h3 id=\"children-under-the-age-of-13\">Children Under The Age Of 13:</h3>\n        <p>\n          Pogify.net is <strong>not</strong> intended for children under 13\n          years of age. We do <strong>not</strong> knowingly collect personal\n          information from children under 13. If you are under 13, please{\" \"}\n          <strong>do not</strong> provide any information on pogify.net.\n        </p>\n        <h3 id=\"dispute-resolution\">Dispute Resolution:</h3>\n        <p>\n          If you have any complaints regarding the privacy policy please contact\n          us at support@pogify.net. We will investigate and attempt to resolve\n          complaints and disputes regarding the use of personal information in\n          accordance with the privacy policy.\n        </p>\n        <p>\n          The work on the website and the images, logos, text and other such\n          information is the property of Pogify.net ( unless otherwise stated ).\n        </p>\n      </div>\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport { Layout } from \"../layouts\";\n\nexport const Terms = () => {\n  return (\n    <Layout>\n      <div>\n        <h1 id=\"terms-and-conditions\">Terms and Conditions</h1>\n        <p>\n          Below are the Terms and Conditions for use of pogify.net. Please read\n          these carefully. By accessing the content of pogify.net you agree to\n          the terms and conditions set out herein and also accept our Privacy\n          Policy. If you do <strong>not</strong> agree to any of the terms and\n          conditions you should <strong>not</strong> continue to use pogify.net\n          and leave immediately.\n        </p>\n        <p>\n          You agree that you shall <strong>not</strong> use pogify.net for any\n          illegal purposes and that you will respect all applicable laws and\n          regulations.\n        </p>\n        <p>\n          You agree <strong>not</strong> to use pogify.net in a way that may\n          impair the performance, corrupt or manipulate the content or\n          information available on pogify.net or reduce the overall\n          functionality of pogify.net.\n        </p>\n        <p>\n          You agree <strong>not</strong> to compromise the security of\n          pogify.net or attempt to gain access to secured areas of pogify.net or\n          attempt to access any sensitive information you may believe exist on\n          pogify.net or server where it is hosted.\n        </p>\n        <p>\n          You agree to be fully responsible for any claim, expense, losses,\n          liability, costs including legal fees incurred by us arising from any\n          infringement of the terms and conditions in this agreement and to\n          which you will have agreed if you continue to use pogify.net.\n        </p>\n        <p>\n          The work on pogify.net and the images, logos, text and other such\n          information is the property of pogify.net ( unless otherwise stated ).\n        </p>\n        <h2>Spotify</h2>\n        <p>\n          You agree that you will not modify or create derivative works based on the Spotify Platform, Spotify Service or Spotify Content.\n        </p>\n        <p>\n          You agree that you will not decompile, reverse-engineer, disassemble, and otherwise reducing the Spotify Platform, Spotify Service, and Spotify Content to source code or other human-perceivable form, to the full extent allowed by law.\n        </p>\n        <p>\n          <a href=\"http://Pogify.net\">Pogify.net</a> takes full liabilty of it’s products and disclaims any liabilty from Spotify.\n        </p>\n        <p>\n          Spotify is a third party beneficiary of <a href=\"http://Pogify.net\">Pogify.net</a> end user license agreement and privacy policy and is entitled to directly enforce them.\n        </p>\n      </div>\n    </Layout>\n  );\n};\n","import axios from \"axios\";\r\nimport crypto from \"crypto\";\r\nexport const CLIENT_ID = \"f15b994280f345438a06222ca529dc94\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nlet redirectURL = window.location.origin + \"/auth\";\r\nexport async function getToken(code) {\r\n  let postData = {\r\n    client_id: CLIENT_ID,\r\n    grant_type: \"authorization_code\",\r\n    code: code,\r\n    redirect_uri: redirectURL,\r\n    code_verifier: window.sessionStorage.getItem(\"hashKey\"),\r\n  };\r\n  let form = new URLSearchParams();\r\n  for (let key in postData) {\r\n    form.append(key, postData[key]);\r\n  }\r\n\r\n  let res = await axios.post(\"https://accounts.spotify.com/api/token\", form);\r\n  window.sessionStorage.setItem(\"refresh_token\", res.data.refresh_token);\r\n  window.sessionStorage.setItem(\r\n    \"expires_at\",\r\n    Date.now() + res.data.expires_in * 1000\r\n  );\r\n  window.sessionStorage.setItem(\"access_token\", res.data.access_token);\r\n  return res.data;\r\n}\r\n\r\nexport async function refreshToken(token) {\r\n  let postData = {\r\n    client_id: CLIENT_ID,\r\n    grant_type: \"refresh_token\",\r\n    refresh_token: token,\r\n  };\r\n  let form = new URLSearchParams();\r\n  for (let key in postData) {\r\n    form.append(key, postData[key]);\r\n  }\r\n\r\n  let res = await axios.post(\"https://accounts.spotify.com/api/token\", form);\r\n  window.sessionStorage.setItem(\"refresh_token\", res.data.refresh_token);\r\n  window.sessionStorage.setItem(\r\n    \"expires_at\",\r\n    Date.now() + res.data.expires_in * 1000\r\n  );\r\n  window.sessionStorage.setItem(\"access_token\", res.data.access_token);\r\n  return res.data;\r\n}\r\n\r\nexport async function goAuth(redirectTo) {\r\n  window.sessionStorage.setItem(\"redirectTo\", redirectTo);\r\n  let hash = await getVerifierAndChallenge(128);\r\n\r\n  window.sessionStorage.setItem(\"hashKey\", hash[0]);\r\n  window.sessionStorage.setItem(\"hashResult\", hash[1]);\r\n\r\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=code&redirect_uri=${encodeURIComponent(\r\n    redirectURL\r\n  )}&scope=streaming%20user-read-email%20user-read-private%20user-modify-playback-state&code_challenge_method=S256&code_challenge=${\r\n    hash[1]\r\n  }`;\r\n}\r\n\r\nexport function getPlayer(title) {\r\n  return new window.Spotify.Player({\r\n    volume: 0.2,\r\n    name: title,\r\n    getOAuthToken: (callback) => {\r\n      let token = window.sessionStorage.getItem(\"access_token\");\r\n      let rToken = window.sessionStorage.getItem(\"refresh_token\");\r\n      let expire = window.sessionStorage.getItem(\"expires_at\");\r\n      if (Date.now() > expire && rToken) {\r\n        return refreshToken(token)\r\n          .then((data) => {\r\n            callback(data.access_token);\r\n          })\r\n          .catch((e) => {\r\n            if ((e.error_description = \"Refresh Token Revoked\")) {\r\n              window.sessionStorage.removeItem(\"refresh_token\");\r\n              window.sessionStorage.removeItem(\"access_token\");\r\n              goAuth(window.location.pathname);\r\n            }\r\n          });\r\n      }\r\n\r\n      if (token) {\r\n        return callback(token);\r\n      }\r\n      let code = window.sessionStorage.getItem(\"code\");\r\n      if (code) {\r\n        getToken(code).then((data) => {\r\n          window.sessionStorage.removeItem(\"code\");\r\n          console.log(data);\r\n          this.setState({\r\n            loggedIn: true,\r\n          });\r\n          callback(data.access_token);\r\n        });\r\n      } else {\r\n        goAuth(window.location.pathname);\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nexport async function getVerifierAndChallenge(len) {\r\n  const validChars =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let array = new Uint8Array(len);\r\n  window.crypto.getRandomValues(array);\r\n  array = array.map((x) => validChars.charCodeAt(x % validChars.length));\r\n  const randomState = String.fromCharCode.apply(null, array);\r\n  const hashedState = await pkce_challenge_from_verifier(randomState);\r\n\r\n  return [randomState, hashedState];\r\n}\r\n\r\nwindow.crypto2 = crypto;\r\nfunction sha256(plain) {\r\n  // returns promise ArrayBuffer\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(plain);\r\n  return crypto.createHash(\"sha256\").update(data).digest();\r\n}\r\n\r\nfunction base64urlencode(a) {\r\n  // Convert the ArrayBuffer to string using Uint8 array.\r\n  // btoa takes chars from 0-255 and base64 encodes.\r\n  // Then convert the base64 encoded to base64url encoded.\r\n  // (replace + with -, replace / with _, trim trailing =)\r\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(a)))\r\n    .replace(/\\+/g, \"-\")\r\n    .replace(/\\//g, \"_\")\r\n    .replace(/=+$/, \"\");\r\n}\r\n\r\nasync function pkce_challenge_from_verifier(v) {\r\n  let hashed = await sha256(v);\r\n  let base64encoded = base64urlencode(hashed);\r\n  return base64encoded;\r\n}\r\n","import React from \"react\";\nimport * as auth from \"../utils/SpotifyAuth\";\nexport class AuthRedirect extends React.Component {\n  componentDidMount() {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has(\"code\")) {\n      auth.getToken(urlParams.get(\"code\")).then(() => {\n        this.props.history.replace(window.sessionStorage.getItem(\"redirectTo\"));\n      });\n    }\n  }\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Layout } from \"../layouts\";\nimport styled from \"styled-components\";\n\nconst CodeInput = styled.input`\n  width: calc(100% - 10px);\n  padding: 5px;\n  border-radius: 12px;\n  border-style: solid;\n  border-width: 0.5px;\n  border-color: rgb(44, 58, 58);\n  text-align: center;\n  transition: box-shadow 0.3s;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24);\n  }\n`;\n\nexport const ConnectToSession = () => {\n  const [code, setCode] = React.useState(\"\");\n  const history = useHistory();\n\n  const submit = () => {\n    history.push(\"/session/\" + code);\n  };\n\n  return (\n    <Layout>\n      <h2 style={{ marginTop: 0 }}>Enter Session Code</h2>\n      <form onSubmit={submit} style={{ display: \"inline\" }}>\n        <div>\n          <CodeInput\n            type=\"text\"\n            placeholder=\"Code\"\n            onChange={(e) => setCode(e.target.value)}\n            style={{}}\n          />\n        </div>\n        <div>\n          <button\n            type=\"submit\"\n            style={{\n              width: \"100%\",\n              margin: \"auto\",\n              marginTop: \"1rem\",\n            }}\n          >\n            Go\n          </button>\n        </div>\n      </form>\n    </Layout>\n  );\n};\n","import axios from \"axios\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst FBAuth = firebase.auth();\r\n\r\nexport const refreshToken = async (session_token) => {\r\n  try {\r\n    let user = await FBAuth.signInAnonymously();\r\n    let res = await axios.get(\r\n      \"https://us-central1-pogify-database.cloudfunctions.net/refreshToken\",\r\n      {\r\n        headers: {\r\n          \"X-Session-Token\": window.localStorage.getItem(\"pogify:token\"),\r\n          Authorization: \"Bearer \" + (await user.user.getIdToken()),\r\n        },\r\n      }\r\n    );\r\n\r\n    window.localStorage.setItem(\"pogify:token\", res.data.token);\r\n    window.localStorage.setItem(\r\n      \"pogify:expiresAt\",\r\n      res.data.expiresIn * 1000 + Date.now()\r\n    );\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error)\r\n    // TODO: error handling\r\n//     let { code: errorCode, message: errorMessage } = error;\r\n\r\n//     if (errorCode === \"auth/operation-not-allowed\") {\r\n//     }\r\n  }\r\n};\r\n\r\nexport const createSession = async (i = 1) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const user = await FBAuth.signInAnonymously();\r\n      let { data } = await axios.post(\r\n        \"https://us-central1-pogify-database.cloudfunctions.net/startSession\",\r\n        undefined,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + (await user.user.getIdToken()),\r\n          },\r\n        }\r\n      );\r\n\r\n      window.localStorage.setItem(\"pogify:token\", data.token);\r\n      window.localStorage.setItem(\r\n        \"pogify:expiresAt\",\r\n        data.expiresIn * 1000 + Date.now()\r\n      );\r\n      window.localStorage.setItem(\"pogify:session\", data.session);\r\n      resolve(data);\r\n    } catch (e) {\r\n      // backoff retry implementation\r\n      if (i === 10) {\r\n        return reject(new Error(\"max retries reached\"));\r\n      }\r\n      setTimeout(() => {\r\n        resolve(createSession(i + 1));\r\n      }, (i / 10) ** 2);\r\n    }\r\n  });\r\n};\r\n\r\nexport const publishUpdate = async (uri, position, playing, retries = 0) => {\r\n  try {\r\n    let user = await FBAuth.signInAnonymously();\r\n    await axios.post(\r\n      \"https://us-central1-pogify-database.cloudfunctions.net/postUpdate\",\r\n      {\r\n        uri,\r\n        position,\r\n        playing,\r\n        timestamp: Date.now(),\r\n      },\r\n      {\r\n        headers: {\r\n          \"X-Session-Token\": window.localStorage.getItem(\"pogify:token\"),\r\n          Authorization: \"Bearer \" + (await user.user.getIdToken()),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  } catch (e) {\r\n    if (e.response) {\r\n      if (e.response.status === 401) {\r\n        // session expired modal or something\r\n        console.error(\"sessionExpired\");\r\n      } else if (e.response.status === 429) {\r\n      }\r\n    }\r\n    if (retries < 3) {\r\n      setTimeout(() => publishUpdate(uri, position, playing, retries + 1), 100);\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout } from \"../layouts\";\r\nimport { createSession } from \"../utils/SessionManager\";\r\n\r\nexport class Create extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeSession: \"\",\r\n    };\r\n    this.create = this.create.bind(this);\r\n  }\r\n\r\n  async create() {\r\n    let res = await createSession();\r\n    this.props.history.push(\"/session/\" + res.session);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.localStorage.getItem(\"pogify:expiresAt\") > Date.now()) {\r\n      this.setState({\r\n        activeSession: window.localStorage.getItem(\"pogify:session\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        {Boolean(this.state.activeSession) && (\r\n          <div style={{ textAlign: \"center\", margin: 5 }}>\r\n            Your Active Session:\r\n            <div>\r\n              <Link\r\n                to={`/session/${this.state.activeSession}`}\r\n                style={{ color: \"unset\" }}\r\n              >\r\n                {this.state.activeSession}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <button onClick={this.create}>Create New Listening Session</button>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Layout } from \"../layouts\";\n\nexport class Home extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <h1\n          style={{\n            textAlign: \"center\",\n            fontSize: \"5em\",\n            letterSpacing: \"7px\",\n            margin: 0,\n            fontWeight: \"bold\",\n          }}\n        >\n          POGIFY\n        </h1>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            marginTop: 12,\n          }}\n        >\n          <Link to=\"/session\">\n            <button style={{ fontSize: 15 }}>\n              <u>Join</u> a Session\n            </button>\n          </Link>\n          <Link to=\"/create\">\n            <button style={{ fontSize: 15 }}>\n              <u>Start</u> a session\n            </button>\n          </Link>\n        </div>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\r\nimport { FontAwesomeIcon as FAI } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faVolumeUp,\r\n  faVolumeMute,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nexport const Player = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 300,\r\n        textAlign: \"center\",\r\n        borderRadius: 10,\r\n        padding: 30,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: 300,\r\n          width: 300,\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <img src={props.coverArtURL} alt={`Cover art for ${props.album}`} />\r\n      </div>\r\n      <div style={{ paddingBottom: 10 }}>\r\n        <h3>{props.title}</h3>\r\n        {props.artists.map((item) => item.name).join(\", \")} <br />\r\n        {props.album}\r\n      </div>\r\n      <div>\r\n        {secondsToTimeFormat(props.position)}\r\n        <input\r\n          style={{ width: \"70%\" }}\r\n          type=\"range\"\r\n          name=\"position\"\r\n          id=\"position\"\r\n          value={props.position}\r\n          min={0}\r\n          max={props.duration}\r\n          readOnly\r\n        />\r\n        {secondsToTimeFormat(props.duration)}\r\n      </div>\r\n      <div>\r\n        <FAI icon={faVolumeMute} />\r\n        <input\r\n          type=\"range\"\r\n          name=\"volume\"\r\n          id=\"volume\"\r\n          value={props.volume}\r\n          onChange={props.changeVolume}\r\n          min={0}\r\n          max={1}\r\n          step={0.01}\r\n        />\r\n        <FAI icon={faVolumeUp} />\r\n      </div>\r\n      {!props.dontShow && (\r\n        <div style={{ cursor: \"pointer\" }} onClick={() => props.togglePlay()}>\r\n          {props.playing ? <FAI icon={faPause} /> : <FAI icon={faPlay} />}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nfunction secondsToTimeFormat(duration) {\r\n  // Hours, minutes and seconds\r\n  var hrs = ~~(duration / 3600);\r\n  var mins = ~~((duration % 3600) / 60);\r\n  var secs = ~~duration % 60;\r\n\r\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\r\n  var ret = \"\";\r\n\r\n  if (hrs > 0) {\r\n    ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\r\n  }\r\n\r\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\r\n  ret += \"\" + secs;\r\n  return ret;\r\n}\r\n","import React from \"react\";\r\nimport * as auth from \"../utils/SpotifyAuth\";\r\nimport * as SessionManager from \"../utils/SessionManager\";\r\nimport axios from \"axios\";\r\nimport { Player } from \".\";\r\nimport { Layout } from \"../layouts\";\r\n\r\nexport default class HostPlayer extends React.Component {\r\n  state = {\r\n    position: 0,\r\n    duration: 0,\r\n    connected: false,\r\n    uri: \"\",\r\n    playing: false,\r\n    coverArtURL: \"\",\r\n    title: \"\",\r\n    artists: [],\r\n    album: \"\",\r\n    device_id: \"\",\r\n    volume: 0.2,\r\n    hostConnected: false,\r\n    loading: true,\r\n    connections: 0,\r\n    viewPlayer: false,\r\n    psoCounter: 0,\r\n    session_token: \"\",\r\n  };\r\n\r\n  setTokenRefreshInterval = () => {\r\n    // refresh token\r\n    this.refreshInterval = setInterval(\r\n      SessionManager.refreshToken,\r\n      30 * 60 * 1000,\r\n      [window.localStorage.getItem(\"pogify:token\")]\r\n    );\r\n  };\r\n\r\n  async publishUpdate(uri, position, playing) {\r\n    SessionManager.publishUpdate(uri, position, playing);\r\n  }\r\n\r\n  connect = () => {\r\n    this.player.addListener(\"ready\", (e) => {\r\n      console.log(e);\r\n      this.connectToPlayer(e.device_id);\r\n      this.setTokenRefreshInterval();\r\n      console.log(window.sessionStorage.getItem(\"expires_at\"));\r\n\r\n      this.setState({\r\n        device_id: e.device_id,\r\n        loggedIn: true,\r\n      });\r\n    });\r\n    this.player.addListener(\"not_ready\", console.log);\r\n    this.player.on(\"initialization_error\", ({ message }) => {\r\n      console.error(\"Failed to initialize\", message);\r\n    });\r\n    this.player.on(\"authentication_error\", ({ message }) => {\r\n      console.error(\"Failed to authenticate\", message);\r\n    });\r\n    this.player.on(\"account_error\", ({ message }) => {\r\n      console.error(\"Failed to validate Spotify account\", message);\r\n    });\r\n    this.player.on(\"playback_error\", ({ message }) => {\r\n      console.error(\"Failed to perform playback\", message);\r\n    });\r\n    this.player.connect();\r\n  };\r\n\r\n  initializePlayer = () => {\r\n    window.spotifyReady = true;\r\n    this.player = auth.getPlayer(\"Pogify Host\");\r\n    this.player.on(\"player_state_changed\", (data) => {\r\n      console.log(data);\r\n      if (this.state.psoCounter && !data) {\r\n        // push disconnect update\r\n        this.publishUpdate(\"\", this.state.position, false);\r\n\r\n        // show a modal and/or send a notification on disconnect\r\n        alert(\r\n          \"Spotify disconnected. Check that you are connected to 'Pogify Host' on Spotify\"\r\n        );\r\n      }\r\n      if (data) {\r\n        console.log(\"alksdfe\", data);\r\n        this.setState({\r\n          playbackStateObj: data,\r\n          position: data.position,\r\n          psoCounter: this.state.psoCounter + 1,\r\n        });\r\n      }\r\n    });\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  connectToPlayer = (device_id) => {\r\n    return axios\r\n      .put(\r\n        `https://api.spotify.com/v1/me/player`,\r\n        {\r\n          device_ids: [device_id || this.state.device_id],\r\n          play: false,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${window.sessionStorage.getItem(\r\n              \"access_token\"\r\n            )}`,\r\n          },\r\n        }\r\n      )\r\n      .then(() => {\r\n        this.setState({\r\n          connected: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  changeVolume = (e) => {\r\n    this.player.setVolume(e.target.value);\r\n    this.setState({\r\n      volume: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.onbeforeunload = () => {\r\n      this.publishUpdate(\"\", this.state.position, false);\r\n    };\r\n\r\n    this.setState({\r\n      session_token: window.localStorage.getItem(\"pogify:token\"),\r\n    });\r\n\r\n    if (window.spotifyReady) {\r\n      this.initializePlayer();\r\n    } else {\r\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(\r\n    _prevProps,\r\n    { playbackStateObj: pPSO, psoCounter: ppsoC }\r\n  ) {\r\n    if (!pPSO) {\r\n      return;\r\n    }\r\n\r\n    if (ppsoC !== this.state.psoCounter) {\r\n      let {\r\n        track_window: {\r\n          current_track: { uri },\r\n        },\r\n        position,\r\n        paused,\r\n      } = this.state.playbackStateObj;\r\n      this.publishUpdate(uri, position, !paused);\r\n\r\n      if (pPSO.paused !== paused) {\r\n        if (paused) {\r\n          clearInterval(this.tickInterval);\r\n        } else {\r\n          this.tickInterval = setInterval(() => {\r\n            this.setState({\r\n              position: this.state.position + 1000,\r\n            });\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.publishUpdate(\"\", this.state.position, false);\r\n    window.onbeforeunload = null;\r\n    this.player.disconnect();\r\n    clearInterval(this.refreshInterval);\r\n  }\r\n\r\n  render() {\r\n    if (Date.now() > window.sessionStorage.getItem(\"expires_at\")) {\r\n      return (\r\n        <Layout>\r\n          <button onClick={this.connect}>Login with Spotify</button>\r\n        </Layout>\r\n      );\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return (\r\n        <Layout>\r\n          <div>Loading</div>\r\n        </Layout>\r\n      );\r\n    }\r\n\r\n    if (!this.state.playbackStateObj) {\r\n      return (\r\n        <Layout>\r\n          <button onClick={this.connect}>Start Session</button>\r\n        </Layout>\r\n      );\r\n    }\r\n\r\n    let { paused, duration } = this.state.playbackStateObj;\r\n    let { volume } = this.state;\r\n    let position = this.state.position;\r\n    let coverArtURL = this.state.playbackStateObj.track_window.current_track\r\n      .album.images[0].url;\r\n    let album = this.state.playbackStateObj.track_window.current_track.album\r\n      .name;\r\n    let artists = this.state.playbackStateObj.track_window.current_track\r\n      .artists;\r\n    let title = this.state.playbackStateObj.track_window.current_track.name;\r\n\r\n    return (\r\n      <>\r\n        <Player\r\n          position={position / 1000}\r\n          duration={duration / 1000}\r\n          coverArtURL={coverArtURL}\r\n          album={album}\r\n          title={title}\r\n          artists={artists}\r\n          togglePlay={() => this.player.togglePlay()}\r\n          playing={!paused}\r\n          volume={volume}\r\n          changeVolume={this.changeVolume}\r\n        />\r\n        <div\r\n          style={{\r\n            width: 300,\r\n            textAlign: \"center\",\r\n            backgroundColor: \"#424242\",\r\n            borderRadius: 10,\r\n            padding: 30,\r\n            marginTop: 10,\r\n          }}\r\n        >\r\n          You are the host of this session. <br />\r\n          Share the url below to listen with others:\r\n          <div style={{ margin: 10 }}>\r\n            <input type=\"text\" readOnly value={window.location.href} />\r\n          </div>\r\n          Use Spotify as you usually would. <br />\r\n          Your music is being played in this browser window. Don't close this\r\n          window. <br />\r\n          {this.state.connections} in this session.\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport * as auth from \"../utils/SpotifyAuth\";\r\nimport axios from \"axios\";\r\nimport { Player } from \".\";\r\nimport { Layout } from \"../layouts\";\r\n\r\nexport default class ListenerPlayer extends React.Component {\r\n  playReq = false;\r\n  state = {\r\n    hostConnected: false,\r\n    subConnected: false,\r\n    spotConnected: false,\r\n    loading: true,\r\n    artists: [],\r\n    position: 0,\r\n    uri: \"\",\r\n    duration: 0,\r\n    volume: 0.2,\r\n    playing: false,\r\n    title: \"\",\r\n    album: \"\",\r\n    connections: 0,\r\n  };\r\n\r\n  play = (uri, pos_ms) => {\r\n    if (this.playReq) {\r\n      return;\r\n    } else {\r\n      this.playReq = true;\r\n    }\r\n\r\n    console.log(\"play??\", uri, pos_ms);\r\n    return axios\r\n      .put(\r\n        `https://api.spotify.com/v1/me/player/play?device_id=${this.state.device_id}`,\r\n        {\r\n          uris: [uri],\r\n          position_ms: pos_ms,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${window.sessionStorage.getItem(\r\n              \"access_token\"\r\n            )}`,\r\n          },\r\n        }\r\n      )\r\n      .then(() => {\r\n        setTimeout(() => {\r\n          this.playReq = false;\r\n        }, 1000);\r\n      });\r\n  };\r\n\r\n  setListenerListeners = () => {\r\n    console.log(process.env.REACT_APP_SUB);\r\n    this.eventListener = new EventSource(\r\n      process.env.REACT_APP_SUB + \"/sub/\" + this.props.sessionId + \".b1\"\r\n    );\r\n\r\n    this.eventListener.onopen = () => {\r\n      this.setState({\r\n        subConnected: true,\r\n      });\r\n    };\r\n\r\n    this.eventListener.onmessage = (event) => {\r\n      console.log(event.data);\r\n      let { timestamp, uri, position, playing } = JSON.parse(event.data);\r\n      console.log(event.data);\r\n      if (this.state.uri && !uri) {\r\n        this.setState({\r\n          playing: false,\r\n        });\r\n        alert(\"Host disconnected. Playback Paused\");\r\n        return;\r\n      } else if (!uri) {\r\n        this.setState({\r\n          hostConnected: false,\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.setState((prevState) => {\r\n        // if the incoming timestamp is older than the set timestamp, it is stale. ignore it\r\n        if (prevState.timestamp && timestamp < prevState.timestamp) {\r\n          return {};\r\n        }\r\n        // if spotify is doing the divide by 1000 bug don't do anything\r\n        // if (Math.abs(prevState.timestamp / 1000 - timestamp) > 2) {\r\n        //   return {};\r\n        // }\r\n\r\n        // if this is playing connect calc position if is playing\r\n        let calcPos = playing ? position + Date.now() - timestamp : position;\r\n        return {\r\n          timestamp,\r\n          uri,\r\n          position: calcPos,\r\n          playing,\r\n          hostConnected: true,\r\n        };\r\n      });\r\n    };\r\n\r\n    this.eventListener.onerror = console.error;\r\n\r\n    this.player.addListener(\"player_state_changed\", (data) => {\r\n      console.log(\"player_state_changed\");\r\n      if (data === null) return;\r\n\r\n      this.setState({\r\n        pso: data,\r\n        uri: data.uri,\r\n        position: data.position,\r\n        duration: data.duration,\r\n      });\r\n    });\r\n  };\r\n\r\n  async componentDidUpdate(_prevProps, prevState) {\r\n    if (this.state.hostConnected && this.state.pso) {\r\n      if (this.state.playing !== !this.state.pso.paused) {\r\n        if (this.state.playing) {\r\n          this.player.resume();\r\n          if (!this.tick) {\r\n            this.tick = setInterval(() => {\r\n              this.setState({\r\n                position: this.state.position + 100,\r\n              });\r\n            }, 100);\r\n          }\r\n        } else {\r\n          clearInterval(this.tick);\r\n          delete this.tick;\r\n          this.player.pause();\r\n          this.setState({\r\n            pso: await this.player.getCurrentState(),\r\n          });\r\n        }\r\n      }\r\n      if (Math.abs(this.state.position - prevState.position) > 200) {\r\n        this.player.seek(this.state.position);\r\n      }\r\n\r\n      if (\r\n        (prevState.uri !== this.state.uri ||\r\n          this.state.uri !== this.state.pso.uri) &&\r\n        this.state.uri\r\n      ) {\r\n        this.play(this.state.uri, this.state.position);\r\n      }\r\n    }\r\n  }\r\n\r\n  connect = () => {\r\n    console.log(\"once\");\r\n    this.player.addListener(\"ready\", (e) => {\r\n      console.log(e);\r\n      this.setListenerListeners();\r\n\r\n      this.connectToPlayer(e.device_id).then(() => {\r\n        console.log(\"connect\");\r\n        this.setState({\r\n          device_id: e.device_id,\r\n          spotConnected: true,\r\n        });\r\n      });\r\n    });\r\n    this.player.on(\"player_state_changed\", console.log);\r\n    this.player.on(\"initialization_error\", ({ message }) => {\r\n      console.error(\"Failed to initialize\", message);\r\n    });\r\n    this.player.on(\"authentication_error\", ({ message }) => {\r\n      console.error(\"Failed to authenticate\", message);\r\n    });\r\n    this.player.on(\"account_error\", ({ message }) => {\r\n      console.error(\"Failed to validate Spotify account\", message);\r\n    });\r\n    this.player.on(\"playback_error\", ({ message }) => {\r\n      console.error(\"Failed to perform playback\", message);\r\n    });\r\n    this.player.connect().then(console.log);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.eventListener) {\r\n      this.eventListener.close();\r\n    }\r\n    if (this.player) {\r\n      this.player.disconnect();\r\n    }\r\n  }\r\n\r\n  initializePlayer = () => {\r\n    window.spotifyReady = true;\r\n    this.player = auth.getPlayer(\"Pogify Listener\");\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (window.spotifyReady) {\r\n      this.initializePlayer();\r\n    } else {\r\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\r\n    }\r\n  }\r\n\r\n  connectToPlayer = (device_id) => {\r\n    return axios.put(\r\n      `https://api.spotify.com/v1/me/player`,\r\n      {\r\n        device_ids: [device_id || this.state.device_id],\r\n        play: false,\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${window.sessionStorage.getItem(\r\n            \"access_token\"\r\n          )}`,\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  changeVolume = (e) => {\r\n    this.player.setVolume(e.target.value);\r\n    this.setState({\r\n      volume: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (Date.now() > window.sessionStorage.getItem(\"expires_at\")) {\r\n      return (\r\n        <Layout>\r\n          <button onClick={this.connect}>Login with Spotify</button>\r\n        </Layout>\r\n      );\r\n    }\r\n\r\n    // if loading sdk show loading\r\n    if (this.state.loading) {\r\n      return (\r\n        <Layout>\r\n          <div>Loading...</div>\r\n        </Layout>\r\n      );\r\n    }\r\n    // if any are false allow join\r\n    if (!this.state.spotConnected || !this.state.subConnected) {\r\n      return (\r\n        <Layout>\r\n          <button onClick={this.connect}>Join Session</button>\r\n        </Layout>\r\n      );\r\n    }\r\n\r\n    if (!this.state.hostConnected) {\r\n      return (\r\n        <Layout>\r\n          <h2>Waiting for Host...</h2>{\" \"}\r\n          <p>Session Code: {this.props.sessionId}</p>\r\n        </Layout>\r\n      );\r\n    }\r\n\r\n    if (!this.state.pso) {\r\n      return (\r\n        <Layout>\r\n          <h2>Pogify Disconnected</h2> <p>Return to home screen</p>\r\n        </Layout>\r\n      );\r\n    }\r\n    let { paused, duration } = this.state.pso;\r\n    let volume = this.state.volume;\r\n    let position = this.state.position;\r\n    let coverArtURL = this.state.pso.track_window.current_track.album.images[0]\r\n      .url;\r\n    let album = this.state.pso.track_window.current_track.album.name;\r\n    let artists = this.state.pso.track_window.current_track.artists;\r\n    let title = this.state.pso.track_window.current_track.name;\r\n\r\n    return (\r\n      <Layout>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <Player\r\n            dontShow={true}\r\n            position={position / 1000}\r\n            duration={duration / 1000}\r\n            coverArtURL={coverArtURL}\r\n            album={album}\r\n            title={title}\r\n            artists={artists}\r\n            togglePlay={() => this.player.togglePlay()}\r\n            playing={!paused}\r\n            volume={volume}\r\n            changeVolume={this.changeVolume}\r\n          />\r\n          <div\r\n            style={{\r\n              width: 300,\r\n              textAlign: \"center\",\r\n              borderRadius: 10,\r\n              padding: 30,\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            You are listening to session {this.props.sessionId}. <br />\r\n            Playback is controlled by the host. <br />\r\n            <deL>\r\n              Pressing pause will pause playback locally only. On resume,\r\n              playback will resynchronize with the host. <br />\r\n            </deL>\r\n            <h3>\r\n              Listener Pause/Play is not implemented at the moment. To pause\r\n              navigate away from this page or disconnect from 'Pogify Listener'\r\n              from another spotify instance.\r\n            </h3>{\" \"}\r\n            <h1>\r\n              PRESSING PLAY OR PAUSE ON SPOTIFY WILL NOT CONTROL LOCAL PLAYBACK\r\n              AS LONG AS YOU ARE CONNECTED TO \"POGIFY LISTENER\"\r\n            </h1>\r\n            <br />\r\n            {this.state.connections} in this session.\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Layout } from \"../layouts\";\nimport { HostPlayer, ListenerPlayer } from \"../components\";\n\nexport class Room extends React.Component {\n  state = {\n    isHost: undefined,\n  };\n\n  componentDidMount() {\n    if (window.localStorage.getItem(\"pogify:expiresAt\") < Date.now()) {\n      // TODO: show an expired modal.\n      this.setState({\n        isHost: null,\n      });\n    } else {\n      this.setState({\n        isHost: window.localStorage.getItem(\"pogify:session\"),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.expired) {\n      window.localStorage.removeItem(\"pogify:expiresAt\");\n      window.localStorage.removeItem(\"pogify:token\");\n      window.localStorage.removeItem(\"pogify:session\");\n    }\n  }\n\n  render() {\n    if (this.state.isHost !== undefined) {\n      return (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\",\n            height: \"100vh\",\n          }}\n        >\n          {this.state.isHost === this.props.match.params.id ? (\n            <HostPlayer\n              {...this.props}\n              sessionId={this.props.match.params.id}\n            />\n          ) : (\n            <ListenerPlayer sessionId={this.props.match.params.id} />\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <Layout>\n          <h2>Loading...</h2>\n        </Layout>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Privacy } from \"./routes/Privacy\";\nimport { Terms } from \"./routes/Terms\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { AuthRedirect, Room, Create, ConnectToSession, Home } from \"./routes\";\nimport \"./styles/App.css\";\nimport { Layout } from \"./layouts\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/create\" exact component={Create} />\n        <Route path=\"/auth\" exact component={AuthRedirect} />\n        <Route path=\"/session/:id\" component={Room} />\n        <Route path=\"/session\" component={ConnectToSession} exact />\n        <Route path=\"/privacy\" component={Privacy} />\n        <Route path=\"/tos\" component={Terms} />\n        <Route path=\"/\">\n          <Layout>\n            <div style={{ textAlign: \"center\" }}>\n              <h1 style={{ margin: 0 }}>\n                <div>404</div>\n              </h1>\n              <div>What you are looking for ain't here</div>\n              <Link to=\"/\">Go home</Link>\n            </div>\n          </Layout>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}