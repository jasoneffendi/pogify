{"version":3,"sources":["auth.js","AuthRedirect.jsx","Player.jsx","Layout.jsx","HostPlayer.jsx","ListenerPlayer.jsx","Room.jsx","Create.jsx","ConnectToSession.jsx","Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CLIENT_ID","require","config","redirectURL","window","location","origin","getToken","code","a","key","postData","client_id","grant_type","redirect_uri","code_verifier","sessionStorage","getItem","form","URLSearchParams","append","axios","post","res","setItem","data","refresh_token","Date","now","expires_in","access_token","refreshToken","goAuth","redirectTo","getVerifierAndChallenge","hash","href","encodeURIComponent","len","validChars","array","Uint8Array","crypto","getRandomValues","map","x","charCodeAt","length","randomState","String","fromCharCode","apply","pkce_challenge_from_verifier","hashedState","sha256","plain","TextEncoder","encode","createHash","update","digest","base64urlencode","btoa","replace","v","hashed","base64encoded","crypto2","AuthRedirect","urlParams","search","has","auth","get","then","props","history","React","Component","Player","style","width","textAlign","borderRadius","padding","height","overflow","src","coverArtURL","alt","album","paddingBottom","title","artists","item","name","join","secondsToTimeFormat","position","type","id","value","min","max","duration","readOnly","icon","faVolumeMute","volume","onChange","changeVolume","step","faVolumeUp","cursor","onClick","togglePlay","playing","faPause","faPlay","hrs","mins","secs","ret","Layout","display","justifyContent","alignItems","background","color","boxShadow","children","bottom","left","transform","to","HostPlayer","state","connected","uri","device_id","hostConnected","connections","viewPlayer","psoCounter","setHostEmitters","refreshInterval","setInterval","connect","player","addListener","e","console","log","connectToPlayer","setState","on","message","error","initializePlayer","Spotify","getOAuthToken","callback","token","expire","loggedIn","catch","error_description","removeItem","match","params","socket","emit","alert","playbackStateObj","put","device_ids","play","headers","Authorization","setVolume","target","spotifyReady","this","onSpotifyWebPlaybackSDKReady","_prevProps","pPSO","ppsoC","track_window","current_track","paused","process","REACT_APP_SUB","timestamp","clearInterval","tickInterval","removeListener","disconnect","images","url","backgroundColor","marginTop","margin","pos_ms","uris","position_ms","setListenerListeners","pause","once","when","calcPos","pso","sessionId","number","prevState","resume","tick","getCurrentState","Math","abs","seek","io","Room","isHost","flexWrap","Create","hosting","create","bind","session","Boolean","CodeInput","styled","input","ConnectToSession","useState","setCode","useHistory","onSubmit","push","placeholder","Home","fontSize","letterSpacing","fontWeight","marginLeft","App","path","exact","component","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c23a4c5c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport crypto from \"crypto\";\nexport const CLIENT_ID = \"f15b994280f345438a06222ca529dc94\";\n\nrequire(\"dotenv\").config();\n\nlet redirectURL = window.location.origin + \"/auth\";\nexport async function getToken(code) {\n  let postData = {\n    client_id: CLIENT_ID,\n    grant_type: \"authorization_code\",\n    code: code,\n    redirect_uri: redirectURL,\n    code_verifier: window.sessionStorage.getItem(\"hashKey\"),\n  };\n  let form = new URLSearchParams();\n  for (let key in postData) {\n    form.append(key, postData[key]);\n  }\n\n  let res = await axios.post(\"https://accounts.spotify.com/api/token\", form);\n  window.sessionStorage.setItem(\"refresh_token\", res.data.refresh_token);\n  window.sessionStorage.setItem(\n    \"expires_at\",\n    Date.now() + res.data.expires_in * 1000\n  );\n  window.sessionStorage.setItem(\"access_token\", res.data.access_token);\n  return res.data;\n}\n\nexport async function refreshToken(refreshToken) {\n  let postData = {\n    client_id: CLIENT_ID,\n    grant_type: \"refresh_token\",\n    refresh_token: refreshToken,\n  };\n  let form = new URLSearchParams();\n  for (let key in postData) {\n    form.append(key, postData[key]);\n  }\n\n  let res = await axios.post(\"https://accounts.spotify.com/api/token\", form);\n  window.sessionStorage.setItem(\"refresh_token\", res.data.refresh_token);\n  window.sessionStorage.setItem(\n    \"expires_at\",\n    Date.now() + res.data.expires_in * 1000\n  );\n  window.sessionStorage.setItem(\"access_token\", res.data.access_token);\n  return res.data;\n}\n\nexport async function goAuth(redirectTo) {\n  window.sessionStorage.setItem(\"redirectTo\", redirectTo);\n  let hash = await getVerifierAndChallenge(128);\n\n  window.sessionStorage.setItem(\"hashKey\", hash[0]);\n  window.sessionStorage.setItem(\"hashResult\", hash[1]);\n\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=code&redirect_uri=${encodeURIComponent(\n    redirectURL\n  )}&scope=streaming%20user-read-email%20user-read-private%20user-modify-playback-state&code_challenge_method=S256&code_challenge=${\n    hash[1]\n    }`;\n}\n\nexport async function getVerifierAndChallenge(len) {\n  const validChars =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let array = new Uint8Array(len);\n  window.crypto.getRandomValues(array);\n  array = array.map((x) => validChars.charCodeAt(x % validChars.length));\n  const randomState = String.fromCharCode.apply(null, array);\n  const hashedState = await pkce_challenge_from_verifier(randomState);\n\n  return [randomState, hashedState];\n}\n\nwindow.crypto2 = crypto;\nfunction sha256(plain) {\n  // returns promise ArrayBuffer\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return crypto.createHash(\"sha256\").update(data).digest();\n}\n\nfunction base64urlencode(a) {\n  // Convert the ArrayBuffer to string using Uint8 array.\n  // btoa takes chars from 0-255 and base64 encodes.\n  // Then convert the base64 encoded to base64url encoded.\n  // (replace + with -, replace / with _, trim trailing =)\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(a)))\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=+$/, \"\");\n}\n\nasync function pkce_challenge_from_verifier(v) {\n  let hashed = await sha256(v);\n  let base64encoded = base64urlencode(hashed);\n  return base64encoded;\n}\n","import React from \"react\";\nimport * as auth from \"./auth\";\nexport class AuthRedirect extends React.Component {\n  componentDidMount() {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has(\"code\")) {\n      auth.getToken(urlParams.get(\"code\")).then(() => {\n        this.props.history.replace(\n          `/session/${window.sessionStorage.getItem(\"redirectTo\")}`\n        );\n      });\n    }\n  }\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\nimport { FontAwesomeIcon as FAI } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faPause,\n  faVolumeUp,\n  faVolumeMute,\n} from \"@fortawesome/free-solid-svg-icons\";\nexport const Player = (props) => {\n  return (\n    <div\n      style={{\n        width: 300,\n        textAlign: \"center\",\n        borderRadius: 10,\n        padding: 30,\n      }}\n    >\n      <div\n        style={{\n          height: 300,\n          width: 300,\n          overflow: \"hidden\",\n          borderRadius: 10,\n        }}\n      >\n        <img src={props.coverArtURL} alt={`Cover art for ${props.album}`} />\n      </div>\n      <div style={{ paddingBottom: 10 }}>\n        <h3>{props.title}</h3>\n        {props.artists.map((item) => item.name).join(\", \")} <br />\n        {props.album}\n      </div>\n      <div>\n        {secondsToTimeFormat(props.position)}\n        <input\n          style={{ width: \"70%\" }}\n          type=\"range\"\n          name=\"position\"\n          id=\"position\"\n          value={props.position}\n          min={0}\n          max={props.duration}\n          readOnly\n        />\n        {secondsToTimeFormat(props.duration)}\n      </div>\n      <div>\n        <FAI icon={faVolumeMute} />\n        <input\n          type=\"range\"\n          name=\"volume\"\n          id=\"volume\"\n          value={props.volume}\n          onChange={props.changeVolume}\n          min={0}\n          max={1}\n          step={0.01}\n        />\n        <FAI icon={faVolumeUp} />\n      </div>\n      <div style={{ cursor: \"pointer\" }} onClick={() => props.togglePlay()}>\n        {props.playing ? <FAI icon={faPause} /> : <FAI icon={faPlay} />}\n      </div>\n    </div>\n  );\n};\nfunction secondsToTimeFormat(duration) {\n  // Hours, minutes and seconds\n  var hrs = ~~(duration / 3600);\n  var mins = ~~((duration % 3600) / 60);\n  var secs = ~~duration % 60;\n\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n  var ret = \"\";\n\n  if (hrs > 0) {\n    ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n  }\n\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n  ret += \"\" + secs;\n  return ret;\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport \"./Layout.css\";\nconst Layout = (props) => {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <div\n        style={{\n          background: \"white\",\n          color: \"#2C3A3A\",\n          padding: \"2rem\",\n          borderRadius: \"12.5px\",\n          boxShadow: \"0px 3px 15px rgba(0,0,0,0.2)\",\n        }}\n      >\n        {props.children}\n      </div>\n      <p style={{\n        position: \"absolute\",\n        bottom: \"0\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        color: 'white'\n      }}>\n        © <a href=\"https://www.pogify.net/\" style={{color: 'white'}}>Pogify</a> 2020 | <Link to=\"tos\" style={{color: 'white'}}>Terms of Service</Link> | <Link to=\"privacy\" style={{color: 'white'}}>Privacy Policy</Link>\n      </p>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\nexport default Layout;\n","import React from \"react\";\nimport * as auth from \"./auth\";\nimport axios from \"axios\";\nimport { Player } from \"./Player\";\nimport Layout from \"./Layout\";\n\nexport default class HostPlayer extends React.Component {\n  state = {\n    position: 0,\n    duration: 0,\n    connected: false,\n    uri: \"\",\n    playing: false,\n    coverArtURL: \"\",\n    title: \"\",\n    artists: [],\n    album: \"\",\n    device_id: \"\",\n    volume: 0.2,\n    hostConnected: false,\n    connections: 0,\n    viewPlayer: false,\n    psoCounter: 0,\n  };\n\n  setHostEmitters = () => {\n    axios.get(\"/refresh\");\n    this.refreshInterval = setInterval(() => {\n      axios.get(\"/refresh\");\n    }, 30 * 60 * 1000);\n  };\n  connect = () => {\n    this.player.addListener(\"ready\", (e) => {\n      console.log(e);\n      this.connectToPlayer(e.device_id);\n      this.setHostEmitters();\n      console.log(window.sessionStorage.getItem(\"expires_at\"));\n\n      this.setState({\n        device_id: e.device_id,\n      });\n    });\n    this.player.addListener(\"not_ready\", console.log);\n    this.player.on(\"initialization_error\", ({ message }) => {\n      console.error(\"Failed to initialize\", message);\n    });\n    this.player.on(\"authentication_error\", ({ message }) => {\n      console.error(\"Failed to authenticate\", message);\n    });\n    this.player.on(\"account_error\", ({ message }) => {\n      console.error(\"Failed to validate Spotify account\", message);\n    });\n    this.player.on(\"playback_error\", ({ message }) => {\n      console.error(\"Failed to perform playback\", message);\n    });\n    this.player.connect();\n  };\n\n  initializePlayer = () => {\n    this.player = new window.Spotify.Player({\n      volume: 0.2,\n      name: \"Pogify Host\",\n      getOAuthToken: (callback) => {\n        let token = window.sessionStorage.getItem(\"access_token\");\n        let refreshToken = window.sessionStorage.getItem(\"refresh_token\");\n        let expire = window.sessionStorage.getItem(\"expires_at\");\n        if (Date.now() > expire && refreshToken) {\n          return auth\n            .refreshToken(refreshToken)\n            .then((data) => {\n              this.setState({\n                loggedIn: true,\n              });\n              callback(data.access_token);\n            })\n            .catch((e) => {\n              if ((e.error_description = \"Refresh Token Revoked\")) {\n                window.sessionStorage.removeItem(\"refresh_token\");\n                window.sessionStorage.removeItem(\"access_token\");\n                auth.goAuth(this.props.match.params.id);\n              }\n            });\n        }\n\n        if (token) {\n          this.setState({\n            loggedIn: true,\n          });\n          return callback(token);\n        }\n        let code = window.sessionStorage.getItem(\"code\");\n        if (code) {\n          auth.getToken(code).then((data) => {\n            window.sessionStorage.removeItem(\"code\");\n            console.log(data);\n            this.setState({\n              loggedIn: true,\n            });\n            callback(data.access_token);\n          });\n        } else {\n          auth.goAuth(this.props.match.params.id);\n        }\n      },\n    });\n    this.player.on(\"player_state_changed\", (data) => {\n      console.log(data);\n      if (this.state.psoCounter && !data) {\n        this.props.socket.emit(\"HOST_DISCONNECT\");\n\n        alert(\n          \"Spotify disconnected. Check that you are connected to the 'Michael Reeves Player' on Spotify\"\n        );\n      }\n      if (data) {\n        console.log(\"alksdfe\", data);\n        this.setState({\n          playbackStateObj: data,\n          position: data.position,\n          psoCounter: this.state.psoCounter + 1,\n        });\n      }\n    });\n  };\n\n  componentDidMount() {\n    if (window.spotifyReady) {\n      this.initializePlayer();\n    } else {\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    }\n  }\n\n  componentDidUpdate(\n    _prevProps,\n    { playbackStateObj: pPSO, psoCounter: ppsoC }\n  ) {\n    if (this.state.psoCounter === 1) {\n      let {\n        track_window: {\n          current_track: { uri },\n        },\n        position,\n        paused,\n      } = this.state.playbackStateObj;\n      console.log(uri);\n      this.props.socket.emit(\"HOST_CONNECTED\", uri, position, !paused);\n    } else if (ppsoC !== this.state.psoCounter) {\n      let {\n        track_window: {\n          current_track: { uri },\n        },\n        position,\n        paused,\n      } = this.state.playbackStateObj;\n      this.props.socket.emit(\"UPDATE\", uri, position, !paused);\n      axios.post(\n        process.env.REACT_APP_SUB + \"/pub\",\n        {\n          timestamp: Date.now(),\n          uri,\n          position,\n          playing: !paused,\n        },\n        {\n          params: {\n            id: \"abc\",\n          },\n        }\n      );\n      if (pPSO.paused !== paused) {\n        if (paused) {\n          clearInterval(this.tickInterval);\n        } else {\n          this.tickInterval = setInterval(() => {\n            this.setState({\n              position: this.state.position + 1000,\n            });\n          }, 1000);\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.player.removeListener(\"ready\");\n    this.props.socket.disconnect();\n    this.player.disconnect();\n    delete window.player;\n  }\n\n  connectToPlayer = (device_id) => {\n    return axios\n      .put(\n        `https://api.spotify.com/v1/me/player`,\n        {\n          device_ids: [device_id || this.state.device_id],\n          play: false,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${window.sessionStorage.getItem(\n              \"access_token\"\n            )}`,\n          },\n        }\n      )\n      .then(() => {\n        this.setState({\n          connected: true,\n        });\n      });\n  };\n\n  changeVolume = (e) => {\n    this.player.setVolume(e.target.value);\n    this.setState({\n      volume: e.target.value,\n    });\n  };\n\n  render() {\n    if (Date.now() > window.sessionStorage.getItem(\"expires_at\")) {\n      return (\n        <Layout>\n          <button onClick={this.connect}>Login with Spotify</button>\n        </Layout>\n      );\n    }\n\n    if (!this.state.playbackStateObj) {\n      return (\n        <Layout>\n          <button onClick={this.connect}>Start Session</button>\n        </Layout>\n      );\n    }\n\n    let { paused, duration } = this.state.playbackStateObj;\n    let { volume } = this.state;\n    let position = this.state.position;\n    let coverArtURL = this.state.playbackStateObj.track_window.current_track\n      .album.images[0].url;\n    let album = this.state.playbackStateObj.track_window.current_track.album\n      .name;\n    let artists = this.state.playbackStateObj.track_window.current_track\n      .artists;\n    let title = this.state.playbackStateObj.track_window.current_track.name;\n\n    return (\n      <>\n        <Player\n          position={position / 1000}\n          duration={duration / 1000}\n          coverArtURL={coverArtURL}\n          album={album}\n          title={title}\n          artists={artists}\n          togglePlay={() => this.player.togglePlay()}\n          playing={!paused}\n          volume={volume}\n          changeVolume={this.changeVolume}\n        />\n        <div\n          style={{\n            width: 300,\n            textAlign: \"center\",\n            backgroundColor: \"#424242\",\n            borderRadius: 10,\n            padding: 30,\n            marginTop: 10,\n          }}\n        >\n          You are the host of this session. <br />\n          Share the url below to listen with others:\n          <div style={{ margin: 10 }}>\n            <input type=\"text\" readOnly value={window.location.href} />\n          </div>\n          Use Spotify as you usually would. <br />\n          Your music is being played in this browser window. Don't close this\n          window. <br />\n          {this.state.connections} in this session.\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport * as auth from \"./auth\";\nimport axios from \"axios\";\nimport { Player } from \"./Player\";\nimport Layout from \"./Layout\";\n\nexport default class HostPlayer extends React.Component {\n  state = {\n    hostConnected: false,\n    connected: false,\n    artists: [],\n    position: 0,\n    uri: \"\",\n    duration: 0,\n    volume: 0.2,\n    playing: false,\n    coverArtURL: \"#\",\n    title: \"\",\n    album: \"\",\n    connections: 0,\n  };\n\n  play = (uri, pos_ms) => {\n    console.log(\"play??\", uri, pos_ms);\n    return axios.put(\n      `https://api.spotify.com/v1/me/player/play?device_id=${this.state.device_id}`,\n      {\n        uris: [uri],\n        position_ms: pos_ms,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${window.sessionStorage.getItem(\n            \"access_token\"\n          )}`,\n        },\n      }\n    );\n  };\n\n  setListenerListeners = () => {\n    this.props.socket.on(\"HOST_DISCONNECT\", () => {\n      this.player.pause();\n      alert(\"Host disconnected. Playback Paused\");\n    });\n\n    this.props.socket.once(\"INITIAL\", (data) => {\n      if (data) {\n        let { uri, position, playing, when } = data;\n        let calcPos = playing ? position + Date.now() - when : position;\n        console.log(\"intial\", uri, position, calcPos, playing, when);\n        this.setState({\n          uri,\n          position: calcPos,\n          playing,\n          hostConnected: true,\n          connected: true,\n        });\n      } else {\n        this.setState({\n          connected: true,\n        });\n      }\n    });\n    this.props.socket.on(\"UPDATE\", (uri, position, playing) => {\n      console.log(\"update\", uri, position, playing);\n      this.setState({\n        uri,\n        position,\n        playing,\n        hostConnected: true,\n      });\n    });\n\n    this.props.socket.on(\"HOST_CONNECTED\", (uri, position, playing) => {\n      console.log(\"host_connected\");\n      this.setState({\n        uri,\n        position,\n        playing,\n        hostConnected: true,\n      });\n    });\n\n    this.player.addListener(\"player_state_changed\", (data) => {\n      console.log(\"player_state_changed\");\n      if (data === null) return;\n\n      this.setState({\n        pso: data,\n      });\n    });\n  };\n\n  async componentDidUpdate(_prevProps, prevState) {\n    if (this.state.hostConnected && this.state.pso) {\n      if (this.state.playing !== !this.state.pso.paused) {\n        if (this.state.playing) {\n          this.player.resume();\n          if (!this.tick) {\n            this.tick = setInterval(() => {\n              this.setState({\n                position: this.state.position + 100,\n              });\n            }, 100);\n          }\n        } else {\n          clearInterval(this.tick);\n          delete this.tick;\n          this.player.pause();\n          this.setState({\n            pso: await this.player.getCurrentState(),\n          });\n        }\n      }\n      if (Math.abs(this.state.position - prevState.position) > 200) {\n        this.player.seek(this.state.position);\n      }\n\n      if (prevState.uri !== this.state.uri) {\n        console.log(\"setTrack\", this.state.uri, this.state.position);\n        this.play(this.state.uri, this.state.position);\n      }\n    }\n  }\n\n  connect = () => {\n    console.log(\"once\");\n    this.player.addListener(\"ready\", (e) => {\n      console.log(e);\n      this.setListenerListeners();\n\n      this.connectToPlayer(e.device_id).then(() => {\n        this.props.socket.emit(\"INITIAL\");\n      });\n      this.setState({\n        device_id: e.device_id,\n      });\n    });\n    this.player.on(\"player_state_changed\", console.log);\n    this.player.on(\"initialization_error\", ({ message }) => {\n      console.error(\"Failed to initialize\", message);\n    });\n    this.player.on(\"authentication_error\", ({ message }) => {\n      console.error(\"Failed to authenticate\", message);\n    });\n    this.player.on(\"account_error\", ({ message }) => {\n      console.error(\"Failed to validate Spotify account\", message);\n    });\n    this.player.on(\"playback_error\", ({ message }) => {\n      console.error(\"Failed to perform playback\", message);\n    });\n    this.player.connect().then(console.log);\n    console.log(\"connect\");\n  };\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.disconnect();\n    }\n  }\n\n  initializePlayer = () => {\n    this.player = new window.Spotify.Player({\n      volume: 0.2,\n      name: \"Pogify Listener\",\n      getOAuthToken: (callback) => {\n        let token = window.sessionStorage.getItem(\"access_token\");\n        let refreshToken = window.sessionStorage.getItem(\"refresh_token\");\n        let expire = window.sessionStorage.getItem(\"expires_at\");\n        if (Date.now() > expire && refreshToken) {\n          return auth\n            .refreshToken(refreshToken)\n            .then((data) => {\n              callback(data.access_token);\n            })\n            .catch((e) => {\n              window.sessionStorage.removeItem(\"refresh_token\");\n              window.sessionStorage.removeItem(\"access_token\");\n              auth.goAuth(this.props.sessionId);\n            });\n        }\n\n        if (token) {\n          return callback(token);\n        }\n        let code = window.sessionStorage.getItem(\"code\");\n        if (code) {\n          auth\n            .getToken(code)\n            .then((data) => {\n              window.sessionStorage.removeItem(\"code\");\n              console.log(data);\n              callback(data.access_token);\n            })\n            .catch(() => {\n              auth.goAuth(this.props.sessionId);\n            });\n        } else {\n          auth.goAuth(this.props.sessionId);\n        }\n      },\n    });\n    window.player = this.player;\n    this.props.socket.on(\"CONNECTION_COUNT\", (number) => {\n      console.log(number, \"connections\");\n      this.setState({\n        connections: number,\n      });\n    });\n  };\n\n  componentDidMount() {\n    if (window.spotifyReady) {\n      this.initializePlayer();\n    } else {\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    }\n  }\n\n  connectToPlayer = (device_id) => {\n    return axios.put(\n      `https://api.spotify.com/v1/me/player`,\n      {\n        device_ids: [device_id || this.state.device_id],\n        play: false,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${window.sessionStorage.getItem(\n            \"access_token\"\n          )}`,\n        },\n      }\n    );\n  };\n\n  changeVolume = (e) => {\n    this.player.setVolume(e.target.value);\n    this.setState({\n      volume: e.target.value,\n    });\n  };\n\n  render() {\n    if (Date.now() > window.sessionStorage.getItem(\"expires_at\")) {\n      return (\n        <Layout>\n          <button onClick={this.connect}>Login with Spotify</button>\n        </Layout>\n      );\n    }\n\n    if (!this.state.connected) {\n      return (\n        <Layout>\n          <button onClick={this.connect}>Join Session</button>\n        </Layout>\n      );\n    }\n\n    if (!this.state.hostConnected) {\n      return (\n        <Layout>\n          <h2>Waiting for Host...</h2>{\" \"}\n          <p>Session Code: {this.props.sessionId}</p>\n        </Layout>\n      );\n    }\n\n    if (!this.state.pso) {\n      return (\n        <Layout>\n          <h2>Pogify Disconnected</h2> <p>Return to home screen</p>\n        </Layout>\n      );\n    }\n    let { paused, duration } = this.state.pso;\n    let volume = this.state.volume;\n    let position = this.state.position;\n    let coverArtURL = this.state.pso.track_window.current_track.album.images[0]\n      .url;\n    let album = this.state.pso.track_window.current_track.album.name;\n    let artists = this.state.pso.track_window.current_track.artists;\n    let title = this.state.pso.track_window.current_track.name;\n\n    return (\n      <Layout>\n        <div>\n          <Player\n            position={position / 1000}\n            duration={duration / 1000}\n            coverArtURL={coverArtURL}\n            album={album}\n            title={title}\n            artists={artists}\n            togglePlay={() => this.player.togglePlay()}\n            playing={!paused}\n            volume={volume}\n            changeVolume={this.changeVolume}\n          />\n          <div\n            style={{\n              width: 300,\n              textAlign: \"center\",\n              borderRadius: 10,\n              padding: 30,\n              marginTop: 10,\n            }}\n          >\n            You are listening to session {this.props.sessionId}. <br />\n            Playback is controlled by the host. <br />\n            Pressing pause will pause playback locally only. On resume, playback\n            will resyncronize with the host. <br />\n            {this.state.connections} in this session.\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\nimport HostPlayer from \"./HostPlayer\";\nimport ListenerPlayer from \"./ListenerPlayer\";\nimport Layout from \"./Layout\"\n\nconst io = window.io;\nexport class Room extends React.Component {\n  state = {\n    isHost: false,\n  };\n\n  componentDidMount() {\n    console.log(\"room mount\");\n\n    this.socket = io(\"/\" + this.props.match.params.id);\n    console.log(\"room mount\");\n    this.socket.on(\"IS_HOST\", (isHost) => {\n      console.log(\"ishost\", isHost);\n      this.setState({\n        isHost,\n      });\n    });\n    this.socket.emit(\"IS_HOST\");\n  }\n\n  componentWillUnmount() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n\n  render() {\n    if (this.socket) {\n      return (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\",\n            height: \"100vh\",\n          }}\n        >\n          {this.state.isHost ? (\n            <HostPlayer {...this.props} socket={this.socket} />\n          ) : (\n              <ListenerPlayer\n                sessionId={this.props.match.params.id}\n                socket={this.socket}\n              />\n            )}\n        </div>\n      );\n    } else {\n      return <Layout><h2>Loading...</h2></Layout>;\n    }\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\nexport class Create extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hosting: [],\n    };\n    this.create = this.create.bind(this);\n  }\n\n  create() {\n    axios\n      .post(\"/create\", this.state.session, {\n        headers: {\n          \"Content-Type\": \"text/plain\",\n        },\n      })\n      .then((res) => {\n        window.location.href = `/session/${res.data}`;\n        console.log(res.data);\n      })\n      .catch(console.error);\n  }\n\n  componentDidMount() {\n    axios.get(\"/getSessions\").then((res) => {\n      this.setState({\n        hosting: res.data,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        {Boolean(this.state.hosting.length) && (\n          <div>\n            Your Current Listening Sessions:\n            <ul>\n              {this.state.hosting.map((item) => {\n                return (\n                  <li key={item}>\n                    <Link to={`/session/${item}`} style={{ color: \"unset\" }}>\n                      {item}\n                    </Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n        <button onClick={this.create}>Create New Listening Session</button>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport styled from \"styled-components\";\n\nconst CodeInput = styled.input`\n  width: calc(100% - 10px);\n  padding: 5px;\n  border-radius: 12px;\n  border-style: solid;\n  border-width: 0.5px;\n  border-color: rgb(44, 58, 58);\n  text-align: center;\n  transition: box-shadow 0.3s;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24);\n  }\n`;\n\nexport const ConnectToSession = () => {\n  const [code, setCode] = React.useState(\"\");\n  const history = useHistory();\n\n  const submit = () => {\n    history.push(\"/session/\" + code);\n  };\n\n  return (\n    <Layout>\n      <h2 style={{ marginTop: 0 }}>Enter Session Code</h2>\n      <form onSubmit={submit} style={{ display: \"inline\" }}>\n        <div>\n          <CodeInput\n            type=\"text\"\n            placeholder=\"Code\"\n            onChange={(e) => setCode(e.target.value)}\n            style={{}}\n          />\n        </div>\n        <div>\n          <button\n            type=\"submit\"\n            style={{\n              width: \"100%\",\n              margin: \"auto\",\n              marginTop: \"1rem\",\n            }}\n          >\n            Go\n          </button>\n        </div>\n      </form>\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"./Layout\"\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <h1\n          style={{\n            textAlign: \"center\",\n            fontSize: \"5em\",\n            letterSpacing: \"7px\",\n            margin: 0,\n            fontWeight: \"bold\",\n          }}\n        >\n          POGIFY\n          </h1>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Link to=\"/session\">\n            <button>I am a viewer</button>\n          </Link>\n          <Link to=\"/create\">\n            <button style={{ marginLeft: 10}}>I am a streamer</button>\n          </Link>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { AuthRedirect } from \"./AuthRedirect\";\nimport { Room } from \"./Room\";\nimport { Create } from \"./Create\";\nimport { ConnectToSession } from \"./ConnectToSession\";\nimport Home from \"./Home\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/create\" exact component={Create} />\n        <Route path=\"/auth\" exact component={AuthRedirect} />\n        <Route path=\"/session/:id\" component={Room} />\n        <Route path=\"/session\" component={ConnectToSession} exact />\n        <Route path=\"/\">404</Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}